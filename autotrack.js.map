{"version":3,"file":"autotrack.js","sources":["node_modules/dom-utils/lib/matches.js","node_modules/dom-utils/lib/parents.js","node_modules/dom-utils/lib/closest.js","node_modules/dom-utils/lib/delegate.js","node_modules/dom-utils/lib/dispatch.js","node_modules/dom-utils/lib/get-attributes.js","node_modules/dom-utils/lib/parse-url.js","lib/constants.js","lib/method-chain.js","lib/utilities.js","lib/provide.js","lib/usage.js","lib/plugins/clean-url-tracker.js","node_modules/idlize/lib/now.mjs","node_modules/idlize/idle-callback-polyfills.mjs","node_modules/idlize/lib/queueMicrotask.mjs","node_modules/idlize/IdleQueue.mjs","lib/tracker-queue.js","lib/plugins/event-tracker.js","lib/plugins/impression-tracker.js","node_modules/idlize/IdleValue.mjs","lib/event-emitter.js","lib/store.js","lib/session.js","lib/plugins/max-scroll-tracker.js","lib/plugins/media-query-tracker.js","lib/plugins/outbound-form-tracker.js","lib/plugins/outbound-link-tracker.js","lib/plugins/page-visibility-tracker.js","lib/plugins/social-widget-tracker.js","lib/plugins/url-change-tracker.js","lib/index.js"],"sourcesContent":["const proto = window.Element.prototype;\nconst nativeMatches = proto.matches ||\n      proto.matchesSelector ||\n      proto.webkitMatchesSelector ||\n      proto.mozMatchesSelector ||\n      proto.msMatchesSelector ||\n      proto.oMatchesSelector;\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nexport default function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test ||\n          matchesSelector(element, /** @type {string} */ (test));\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (let i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n}\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  const nodes = element.parentNode.querySelectorAll(selector);\n  for (let i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n","/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nexport default function parents(element) {\n  const list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    element = /** @type {!Element} */ (element.parentNode);\n    list.push(element);\n  }\n  return list;\n}\n","import matches from './matches';\nimport parents from './parents';\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nexport default function closest(element, selector, shouldCheckSelf = false) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n  const parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (let i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n}\n","import closest from './closest';\nimport matches from './matches';\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\nexport default function delegate(\n    ancestor, eventType, selector, callback, opts = {}) {\n  // Defines the event listener.\n  const listener = function(event) {\n    let delegateTarget;\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      const composedPath = event.composedPath();\n      for (let i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    } else {\n      // Otherwise check the parents.\n      delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    },\n  };\n}\n","/**\n * Dispatches an event on the passed element.\n * @param {!Element} element The DOM element to dispatch the event on.\n * @param {string} eventType The type of event to dispatch.\n * @param {Object|string=} eventName A string name of the event constructor\n *     to use. Defaults to 'Event' if nothing is passed or 'CustomEvent' if\n *     a value is set on `initDict.detail`. If eventName is given an object\n *     it is assumed to be initDict and thus reassigned.\n * @param {Object=} initDict The initialization attributes for the\n *     event. A `detail` property can be used here to pass custom data.\n * @return {boolean} The return value of `element.dispatchEvent`, which will\n *     be false if any of the event listeners called `preventDefault`.\n */\nexport default function dispatch(\n    element, eventType, eventName = 'Event', initDict = {}) {\n  let event;\n  let isCustom;\n\n  // eventName is optional\n  if (typeof eventName == 'object') {\n    initDict = eventName;\n    eventName = 'Event';\n  }\n\n  initDict.bubbles = initDict.bubbles || false;\n  initDict.cancelable = initDict.cancelable || false;\n  initDict.composed = initDict.composed || false;\n\n  // If a detail property is passed, this is a custom event.\n  if ('detail' in initDict) isCustom = true;\n  eventName = isCustom ? 'CustomEvent' : eventName;\n\n  // Tries to create the event using constructors, if that doesn't work,\n  // fallback to `document.createEvent()`.\n  try {\n    event = new window[eventName](eventType, initDict);\n  } catch(err) {\n    event = document.createEvent(eventName);\n    const initMethod = 'init' + (isCustom ? 'Custom' : '') + 'Event';\n    event[initMethod](eventType, initDict.bubbles,\n                      initDict.cancelable, initDict.detail);\n  }\n\n  return element.dispatchEvent(event);\n}\n","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nexport default function getAttributes(element) {\n  const attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  const map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (let i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n}\n","const HTTP_PORT = '80';\nconst HTTPS_PORT = '443';\nconst DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nconst a = document.createElement('a');\nconst cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nexport default function parseUrl(url) {\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  let port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  const host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  const origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  const pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search,\n  };\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport const VERSION = '2.4.1';\nexport const DEV_ID = 'i5iSjo';\n\nexport const VERSION_PARAM = '_av';\nexport const USAGE_PARAM = '_au';\n\nexport const NULL_DIMENSION = '(not set)';\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @fileoverview\n * The functions exported by this module make it easier (and safer) to override\n * foreign object methods (in a modular way) and respond to or modify their\n * invocation. The primary feature is the ability to override a method without\n * worrying if it's already been overridden somewhere else in the codebase. It\n * also allows for safe restoring of an overridden method by only fully\n * restoring a method once all overrides have been removed.\n */\n\n\nconst instances = [];\n\n\n/**\n * A class that wraps a foreign object method and emit events before and\n * after the original method is called.\n */\nexport default class MethodChain {\n  /**\n   * Adds the passed override method to the list of method chain overrides.\n   * @param {!Object} context The object containing the method to chain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to add.\n   */\n  static add(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).add(methodOverride);\n  }\n\n  /**\n   * Removes a method chain added via `add()`. If the override is the\n   * only override added, the original method is restored. If the method\n   * chain does not exist, nothing happens.\n   * @param {!Object} context The object containing the method to unchain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to remove.\n   */\n  static remove(context, methodName, methodOverride) {\n    let methodChain = getMethodChain(context, methodName);\n    if (methodChain) {\n      methodChain.remove(methodOverride);\n    }\n  }\n\n  /**\n   * Wraps a foreign object method and overrides it. Also stores a reference\n   * to the original method so it can be restored later.\n   * @param {!Object} context The object containing the method.\n   * @param {string} methodName The name of the method on the object.\n   */\n  constructor(context, methodName) {\n    this.context = context;\n    this.methodName = methodName;\n    this.isTask = /Task$/.test(methodName);\n\n    this.originalMethodReference = this.isTask ?\n        context.get(methodName) : context[methodName];\n\n    this.methodChain = [];\n    this.boundMethodChain = [];\n\n    // Wraps the original method.\n    this.wrappedMethod = (...args) => {\n      const lastBoundMethod =\n          this.boundMethodChain[this.boundMethodChain.length - 1];\n\n      return lastBoundMethod(...args);\n    };\n\n    // Override original method with the wrapped one.\n    if (this.isTask) {\n      context.set(methodName, this.wrappedMethod);\n    } else {\n      context[methodName] = this.wrappedMethod;\n    }\n  }\n\n  /**\n   * Adds a method to the method chain.\n   * @param {!Function} overrideMethod The override method to add.\n   */\n  add(overrideMethod) {\n    this.methodChain.push(overrideMethod);\n    this.rebindMethodChain();\n  }\n\n  /**\n   * Removes a method from the method chain and restores the prior order.\n   * @param {!Function} overrideMethod The override method to remove.\n   */\n  remove(overrideMethod) {\n    const index = this.methodChain.indexOf(overrideMethod);\n    if (index > -1) {\n      this.methodChain.splice(index, 1);\n      if (this.methodChain.length > 0) {\n        this.rebindMethodChain();\n      } else {\n        this.destroy();\n      }\n    }\n  }\n\n  /**\n   * Loops through the method chain array and recreates the bound method\n   * chain array. This is necessary any time a method is added or removed\n   * to ensure proper original method context and order.\n   */\n  rebindMethodChain() {\n    this.boundMethodChain = [];\n    for (let method, i = 0; method = this.methodChain[i]; i++) {\n      const previousMethod = this.boundMethodChain[i - 1] ||\n          this.originalMethodReference.bind(this.context);\n      this.boundMethodChain.push(method(previousMethod));\n    }\n  }\n\n  /**\n   * Calls super and destroys the instance if no registered handlers remain.\n   */\n  destroy() {\n    const index = instances.indexOf(this);\n    if (index > -1) {\n      instances.splice(index, 1);\n      if (this.isTask) {\n        this.context.set(this.methodName, this.originalMethodReference);\n      } else {\n        this.context[this.methodName] = this.originalMethodReference;\n      }\n    }\n  }\n}\n\n\n/**\n * Gets a MethodChain instance for the passed object and method.\n * @param {!Object} context The object containing the method.\n * @param {string} methodName The name of the method on the object.\n * @return {!MethodChain|undefined}\n */\nfunction getMethodChain(context, methodName) {\n  return instances\n      .filter((h) => h.context == context && h.methodName == methodName)[0];\n}\n\n\n/**\n * Gets a MethodChain instance for the passed object and method. If the method\n * has already been wrapped via an existing MethodChain instance, that\n * instance is returned.\n * @param {!Object} context The object containing the method.\n * @param {string} methodName The name of the method on the object.\n * @return {!MethodChain}\n */\nfunction getOrCreateMethodChain(context, methodName) {\n  let methodChain = getMethodChain(context, methodName);\n\n  if (!methodChain) {\n    methodChain = new MethodChain(context, methodName);\n    instances.push(methodChain);\n  }\n  return methodChain;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {getAttributes} from 'dom-utils';\n\n\n/**\n * Accepts default and user override fields and an optional tracker, hit\n * filter, and target element and returns a single object that can be used in\n * `ga('send', ...)` commands.\n * @param {FieldsObj} defaultFields The default fields to return.\n * @param {FieldsObj} userFields Fields set by the user to override the\n *     defaults.\n * @param {Tracker=} tracker The tracker object to apply the hit filter to.\n * @param {Function=} hitFilter A filter function that gets\n *     called with the tracker model right before the `buildHitTask`. It can\n *     be used to modify the model for the current hit only.\n * @param {Element=} target If the hit originated from an interaction\n *     with a DOM element, hitFilter is invoked with that element as the\n *     second argument.\n * @param {(Event|TwttrEvent)=} event If the hit originated via a DOM event,\n *     hitFilter is invoked with that event as the third argument.\n * @return {!FieldsObj} The final fields object.\n */\nexport function createFieldsObj(\n    defaultFields, userFields, tracker = undefined,\n    hitFilter = undefined, target = undefined, event = undefined) {\n  if (typeof hitFilter == 'function') {\n    const originalBuildHitTask = tracker.get('buildHitTask');\n    return {\n      buildHitTask: (/** @type {!Model} */ model) => {\n        model.set(defaultFields, null, true);\n        model.set(userFields, null, true);\n        hitFilter(model, target, event);\n        originalBuildHitTask(model);\n      },\n    };\n  } else {\n    return assign({}, defaultFields, userFields);\n  }\n}\n\n\n/**\n * Retrieves the attributes from an DOM element and returns a fields object\n * for all attributes matching the passed prefix string.\n * @param {Element} element The DOM element to get attributes from.\n * @param {string} prefix An attribute prefix. Only the attributes matching\n *     the prefix will be returned on the fields object.\n * @return {FieldsObj} An object of analytics.js fields and values\n */\nexport function getAttributeFields(element, prefix) {\n  const attributes = getAttributes(element);\n  const attributeFields = {};\n\n  Object.keys(attributes).forEach(function(attribute) {\n    // The `on` prefix is used for event handling but isn't a field.\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      let value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      const field = camelCase(attribute.slice(prefix.length));\n      attributeFields[field] = value;\n    }\n  });\n\n  return attributeFields;\n}\n\n\n/**\n * Accepts a function to be invoked once the DOM is ready. If the DOM is\n * already ready, the callback is invoked immediately.\n * @param {!Function} callback The ready callback.\n */\nexport function domReady(callback) {\n  if (document.readyState == 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n\n/**\n * Returns a function, that, as long as it continues to be called, will not\n * actually run. The function will only run after it stops being called for\n * `wait` milliseconds.\n * @param {!Function} fn The function to debounce.\n * @param {number} wait The debounce wait timeout in ms.\n * @return {!Function} The debounced function.\n */\nexport function debounce(fn, wait) {\n  let timeout;\n  return function(...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn(...args), wait);\n  };\n}\n\n\n/**\n * Accepts a function and returns a wrapped version of the function that is\n * expected to be called elsewhere in the system. If it's not called\n * elsewhere after the timeout period, it's called regardless. The wrapper\n * function also prevents the callback from being called more than once.\n * @param {!Function} callback The function to call.\n * @param {number=} wait How many milliseconds to wait before invoking\n *     the callback.\n * @return {!Function} The wrapped version of the passed function.\n */\nexport function withTimeout(callback, wait = 2000) {\n  let called = false;\n  const fn = function() {\n    if (!called) {\n      called = true;\n      callback();\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n\n/**\n * A small shim of Object.assign that aims for brevity over spec-compliant\n * handling all the edge cases.\n * @param {!Object} target The target object to assign to.\n * @param {...?Object} sources Additional objects who properties should be\n *     assigned to target. Non-objects are converted to objects.\n * @return {!Object} The modified target object.\n */\nexport const assign = Object.assign || function(target, ...sources) {\n  for (let i = 0, len = sources.length; i < len; i++) {\n    const source = Object(sources[i]);\n    for (let key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n\n/**\n * Accepts a string containing hyphen or underscore word separators and\n * converts it to camelCase.\n * @param {string} str The string to camelCase.\n * @return {string} The camelCased version of the string.\n */\nexport function camelCase(str) {\n  return str.replace(/[-_]+(\\w?)/g, function(match, p1) {\n    return p1.toUpperCase();\n  });\n}\n\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} str The input string.\n * @return {string} The capitalized string\n */\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\n/**\n * Indicates whether the passed variable is a JavaScript object.\n * @param {*} value The input variable to test.\n * @return {boolean} Whether or not the test is an object.\n */\nexport function isObject(value) {\n  return typeof value == 'object' && value !== null;\n}\n\n\n/**\n * Accepts a value that may or may not be an array. If it is not an array,\n * it is returned as the first item in a single-item array.\n * @param {*} value The value to convert to an array if it is not.\n * @return {!Array} The array-ified value.\n */\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n\n/**\n * @return {number} The current date timestamp\n */\nexport function now() {\n  return +new Date();\n}\n\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\n/** @param {?=} a */\nexport const uuid = function b(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)};\n/* eslint-enable */\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {DEV_ID} from './constants';\nimport {capitalize} from './utilities';\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nexport default function provide(pluginName, pluginConstructor) {\n  const gaAlias = window.GoogleAnalyticsObject || 'ga';\n  window[gaAlias] = window[gaAlias] || function(...args) {\n    (window[gaAlias].q = window[gaAlias].q || []).push(args);\n  };\n\n  // Adds the autotrack dev ID if not already included.\n  window.gaDevIds = window.gaDevIds || [];\n  if (window.gaDevIds.indexOf(DEV_ID) < 0) {\n    window.gaDevIds.push(DEV_ID);\n  }\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[capitalize(pluginName)] = pluginConstructor;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {USAGE_PARAM, VERSION, VERSION_PARAM} from './constants';\n\n\nexport const plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9,\n  MAX_SCROLL_TRACKER: 10,\n};\n\n\nconst PLUGIN_COUNT = Object.keys(plugins).length;\n\n\n/**\n * Tracks the usage of the passed plugin by encoding a value into a usage\n * string sent with all hits for the passed tracker.\n * @param {!Tracker} tracker The analytics.js tracker object.\n * @param {number} plugin The plugin enum.\n */\nexport function trackUsage(tracker, plugin) {\n  trackVersion(tracker);\n  trackPlugin(tracker, plugin);\n}\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    let toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  const usageHex = tracker.get('&' + USAGE_PARAM);\n  let usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set('&' + USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set('&' + VERSION_PARAM, VERSION);\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {parseUrl} from 'dom-utils';\nimport {NULL_DIMENSION} from '../constants';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign} from '../utilities';\n\n\n/**\n * Class for the `cleanUrlTracker` analytics.js plugin.\n * @implements {CleanUrlTrackerPublicInterface}\n */\nclass CleanUrlTracker {\n  /**\n   * Registers clean URL tracking on a tracker object. The clean URL tracker\n   * removes query parameters from the page value reported to Google Analytics.\n   * It also helps to prevent tracking similar URLs, e.g. sometimes ending a\n   * URL with a slash and sometimes not.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?CleanUrlTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.CLEAN_URL_TRACKER);\n\n    /** @type {CleanUrlTrackerOpts} */\n    const defaultOpts = {\n      // stripQuery: undefined,\n      // queryParamsWhitelist: undefined,\n      // queryDimensionIndex: undefined,\n      // indexFilename: undefined,\n      // trailingSlash: undefined,\n      // urlFilter: undefined,\n    };\n    this.opts = /** @type {CleanUrlTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    /** @type {string|null} */\n    this.queryDimension = this.opts.stripQuery &&\n        this.opts.queryDimensionIndex ?\n            `dimension${this.opts.queryDimensionIndex}` : null;\n\n    // Binds methods to `this`.\n    this.trackerGetOverride = this.trackerGetOverride.bind(this);\n    this.buildHitTaskOverride = this.buildHitTaskOverride.bind(this);\n\n    // Override built-in tracker method to watch for changes.\n    MethodChain.add(tracker, 'get', this.trackerGetOverride);\n    MethodChain.add(tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n\n  /**\n   * Ensures reads of the tracker object by other plugins always see the\n   * \"cleaned\" versions of all URL fields.\n   * @param {function(string):*} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(string):*}\n   */\n  trackerGetOverride(originalMethod) {\n    return (field) => {\n      if (field == 'page' || field == this.queryDimension) {\n        const fieldsObj = /** @type {!FieldsObj} */ ({\n          location: originalMethod('location'),\n          page: originalMethod('page'),\n        });\n        const cleanedFieldsObj = this.cleanUrlFields(fieldsObj);\n        return cleanedFieldsObj[field];\n      } else {\n        return originalMethod(field);\n      }\n    };\n  }\n\n  /**\n   * Cleans URL fields passed in a send command.\n   * @param {function(!Model)} originalMethod A reference to the\n   *     overridden method.\n   * @return {function(!Model)}\n   */\n  buildHitTaskOverride(originalMethod) {\n    return (model) => {\n      const cleanedFieldsObj = this.cleanUrlFields({\n        location: model.get('location'),\n        page: model.get('page'),\n      });\n      model.set(cleanedFieldsObj, null, true);\n      originalMethod(model);\n    };\n  }\n\n  /**\n   * Accepts of fields object containing URL fields and returns a new\n   * fields object with the URLs \"cleaned\" according to the tracker options.\n   * @param {!FieldsObj} fieldsObj\n   * @return {!FieldsObj}\n   */\n  cleanUrlFields(fieldsObj) {\n    const url = parseUrl(\n        /** @type {string} */ (fieldsObj.page || fieldsObj.location));\n\n    let pathname = url.pathname;\n\n    // If an index filename was provided, remove it if it appears at the end\n    // of the URL.\n    if (this.opts.indexFilename) {\n      const parts = pathname.split('/');\n      if (this.opts.indexFilename == parts[parts.length - 1]) {\n        parts[parts.length - 1] = '';\n        pathname = parts.join('/');\n      }\n    }\n\n    // Ensure the URL ends with or doesn't end with slash based on the\n    // `trailingSlash` option. Note that filename URLs should never contain\n    // a trailing slash.\n    if (this.opts.trailingSlash == 'remove') {\n        pathname = pathname.replace(/\\/+$/, '');\n    } else if (this.opts.trailingSlash == 'add') {\n      const isFilename = /\\.\\w+$/.test(pathname);\n      if (!isFilename && pathname.substr(-1) != '/') {\n        pathname = pathname + '/';\n      }\n    }\n\n    /** @type {!FieldsObj} */\n    const cleanedFieldsObj = {\n      page: pathname + (this.opts.stripQuery ?\n          this.stripNonWhitelistedQueryParams(url.search) : url.search),\n    };\n    if (fieldsObj.location) {\n      cleanedFieldsObj.location = fieldsObj.location;\n    }\n    if (this.queryDimension) {\n      cleanedFieldsObj[this.queryDimension] =\n          url.search.slice(1) || NULL_DIMENSION;\n    }\n\n    // Apply the `urlFieldsFilter()` option if passed.\n    if (typeof this.opts.urlFieldsFilter == 'function') {\n      /** @type {!FieldsObj} */\n      const userCleanedFieldsObj =\n          this.opts.urlFieldsFilter(cleanedFieldsObj, parseUrl);\n\n      // Ensure only the URL fields are returned.\n      const returnValue = {\n        page: userCleanedFieldsObj.page,\n        location: userCleanedFieldsObj.location,\n      };\n      if (this.queryDimension) {\n        returnValue[this.queryDimension] =\n            userCleanedFieldsObj[this.queryDimension];\n      }\n      return returnValue;\n    } else {\n      return cleanedFieldsObj;\n    }\n  }\n\n  /**\n   * Accpets a raw URL search string and returns a new search string containing\n   * only the site search params (if they exist).\n   * @param {string} searchString The URL search string (starting with '?').\n   * @return {string} The query string\n   */\n  stripNonWhitelistedQueryParams(searchString) {\n    if (Array.isArray(this.opts.queryParamsWhitelist)) {\n      const foundParams = [];\n      searchString.slice(1).split('&').forEach((kv) => {\n        const [key, value] = kv.split('=');\n        if (this.opts.queryParamsWhitelist.indexOf(key) > -1 && value) {\n          foundParams.push([key, value]);\n        }\n      });\n\n      return foundParams.length ?\n          '?' + foundParams.map((kv) => kv.join('=')).join('&') : '';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Restores all overridden tasks and methods.\n   */\n  remove() {\n    MethodChain.remove(this.tracker, 'get', this.trackerGetOverride);\n    MethodChain.remove(this.tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n}\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n","/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @private\n * @return {number} The current date timestamp\n */\nexport const now = () => {\n  return +new Date();\n};\n","/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {now} from './lib/now.mjs';\n\n\nconst supportsRequestIdleCallback_ = typeof requestIdleCallback === 'function';\n\n/**\n * A minimal shim of the native IdleDeadline class.\n */\nclass IdleDeadline {\n  /** @param {number} initTime */\n  constructor(initTime) {\n    this.initTime_ = initTime;\n  }\n  /** @return {boolean} */\n  get didTimeout() {\n    return false;\n  }\n  /** @return {number} */\n  timeRemaining() {\n    return Math.max(0, 50 - (now() - this.initTime_));\n  }\n}\n\n/**\n * A minimal shim for the requestIdleCallback function. This accepts a\n * callback function and runs it at the next idle period, passing in an\n * object with a `timeRemaining()` method.\n * @private\n * @param {!Function} callback\n * @return {number}\n */\nconst requestIdleCallbackShim = (callback) => {\n  const deadline = new IdleDeadline(now());\n  return setTimeout(() => callback(deadline), 0);\n};\n\n\n/**\n * A minimal shim for the  cancelIdleCallback function. This accepts a\n * handle identifying the idle callback to cancel.\n * @private\n * @param {number|null} handle\n */\nconst cancelIdleCallbackShim = (handle) => {\n  clearTimeout(handle);\n};\n\n\n/**\n * The native `requestIdleCallback()` function or `cancelIdleCallbackShim()`\n *.if the browser doesn't support it.\n * @param {!Function} callback\n * @return {number}\n */\nexport const rIC = supportsRequestIdleCallback_ ?\n    requestIdleCallback : requestIdleCallbackShim;\n\n\n/**\n * The native `cancelIdleCallback()` function or `cancelIdleCallbackShim()`\n * if the browser doesn't support it.\n * @param {number} handle\n */\nexport const cIC = supportsRequestIdleCallback_ ?\n    cancelIdleCallback : cancelIdleCallbackShim;\n","/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @return {!Function}\n */\nconst createQueueMicrotaskViaPromises = () => {\n  return (microtask) => {\n    Promise.resolve().then(microtask);\n  };\n};\n\n/**\n * @return {!Function}\n */\nconst createQueueMicrotaskViaMutationObserver = () => {\n  let i = 0;\n  let microtaskQueue = [];\n  const observer = new MutationObserver(() => {\n    microtaskQueue.forEach((microtask) => microtask());\n    microtaskQueue = [];\n  });\n  const node = document.createTextNode('');\n  observer.observe(node, {characterData: true});\n\n  return (microtask) => {\n    microtaskQueue.push(microtask);\n\n    // Trigger a mutation observer callback, which is a microtask.\n    node.data = String(++i % 2);\n  };\n};\n\n/**\n * Queues a function to be run in the next microtask. If the browser supports\n * Promises, those are used. Otherwise it falls back to MutationObserver.\n * Note: since Promise polyfills are popular but not all support microtasks,\n * we check for native implementation rather than a polyfill.\n * @private\n * @param {!Function} microtask\n */\nexport const queueMicrotask = typeof Promise === 'function' &&\n    Promise.toString().indexOf('[native code]') > -1 ?\n        createQueueMicrotaskViaPromises() :\n        createQueueMicrotaskViaMutationObserver();\n","/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cIC, rIC} from './idle-callback-polyfills.mjs';\nimport {now} from './lib/now.mjs';\nimport {queueMicrotask} from './lib/queueMicrotask.mjs';\n\n\nconst DEFAULT_MIN_TASK_TIME = 0;\n\nconst isSafari_ = !!(typeof safari === 'object' && safari.pushNotification);\n\n/**\n * A class wraps a queue of requestIdleCallback functions for two reasons:\n *   1. So other callers can know whether or not the queue is empty.\n *   2. So we can provide some guarantees that the queued functions will\n *      run in unload-type situations.\n */\nexport class IdleQueue {\n  /**\n   * Creates the IdleQueue instance and adds lifecycle event listeners to\n   * run the queue if the page is hidden (with fallback behavior for Safari).\n   * @param {{\n   *   ensureTasksRun: boolean,\n   *   defaultMinTaskTime: number,\n   * }=} param1\n   */\n  constructor({\n    ensureTasksRun = false,\n    defaultMinTaskTime = DEFAULT_MIN_TASK_TIME,\n  } = {}) {\n    this.idleCallbackHandle_ = null;\n    this.taskQueue_ = [];\n    this.isProcessing_ = false;\n    this.state_ = null;\n    this.defaultMinTaskTime_ = defaultMinTaskTime;\n    this.ensureTasksRun_ = ensureTasksRun;\n\n    // Bind methods\n    this.runTasksImmediately = this.runTasksImmediately.bind(this);\n    this.runTasks_ = this.runTasks_.bind(this);\n    this.onVisibilityChange_ = this.onVisibilityChange_.bind(this);\n\n    if (this.ensureTasksRun_) {\n      addEventListener('visibilitychange', this.onVisibilityChange_, true);\n\n      // Safari does not reliably fire the `pagehide` or `visibilitychange`\n      // events when closing a tab, so we have to use `beforeunload` with a\n      // timeout to check whether the default action was prevented.\n      // - https://bugs.webkit.org/show_bug.cgi?id=151610\n      // - https://bugs.webkit.org/show_bug.cgi?id=151234\n      // NOTE: we only add this to Safari because adding it to Firefox would\n      // prevent the page from being eligible for bfcache.\n      if (isSafari_) {\n        addEventListener('beforeunload', this.runTasksImmediately, true);\n      }\n    }\n  }\n\n  /**\n   * @param {...*} args\n   */\n  pushTask(...args) {\n    this.addTask_(Array.prototype.push, ...args);\n  }\n\n  /**\n   * @param {...*} args\n   */\n  unshiftTask(...args) {\n    this.addTask_(Array.prototype.unshift, ...args);\n  }\n\n  /**\n   * Runs all scheduled tasks synchronously.\n   */\n  runTasksImmediately() {\n    // By not passing a deadline, all tasks will be run sync.\n    this.runTasks_();\n  }\n\n  /**\n   * @return {boolean}\n   */\n  hasPendingTasks() {\n    return this.taskQueue_.length > 0;\n  }\n\n\n  /**\n   * Clears all pending tasks for the queue and stops any scheduled tasks\n   * from running.\n   */\n  clearPendingTasks() {\n    this.taskQueue_ = [];\n    this.cancelScheduledRun_();\n  }\n\n  /**\n   * Returns the state object for the currently running task. If no task is\n   * running, null is returned.\n   * @return {?Object}\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * Destroys the instance by unregistering all added event listeners and\n   * removing any overridden methods.\n   */\n  destroy() {\n    this.taskQueue_ = [];\n    this.cancelScheduledRun_();\n\n    if (this.ensureTasksRun_) {\n      removeEventListener('visibilitychange', this.onVisibilityChange_, true);\n\n      // Safari does not reliably fire the `pagehide` or `visibilitychange`\n      // events when closing a tab, so we have to use `beforeunload` with a\n      // timeout to check whether the default action was prevented.\n      // - https://bugs.webkit.org/show_bug.cgi?id=151610\n      // - https://bugs.webkit.org/show_bug.cgi?id=151234\n      // NOTE: we only add this to Safari because adding it to Firefox would\n      // prevent the page from being eligible for bfcache.\n      if (isSafari_) {\n        removeEventListener(\n            'beforeunload', this.runTasksImmediately, true);\n      }\n    }\n  }\n\n  /**\n   * @param {!Function} arrayMethod Either the Array.prototype{push|shift}.\n   * @param {!Function} task\n   * @param {{minTaskTime: number}=} param1\n   * @private\n   */\n  addTask_(arrayMethod, task, {minTaskTime = this.defaultMinTaskTime_} = {}) {\n    const state = {\n      time: now(),\n      visibilityState: document.visibilityState,\n    };\n\n    arrayMethod.call(this.taskQueue_, {state, task, minTaskTime});\n\n    this.scheduleTasksToRun_();\n  }\n\n  /**\n   * Schedules the task queue to be processed. If the document is in the\n   * hidden state, they queue is scheduled as a microtask so it can be run\n   * in cases where a macrotask couldn't (like if the page is unloading). If\n   * the document is in the visible state, `requestIdleCallback` is used.\n   * @private\n   */\n  scheduleTasksToRun_() {\n    if (this.ensureTasksRun_ && document.visibilityState === 'hidden') {\n      queueMicrotask(this.runTasks_);\n    } else {\n      if (!this.idleCallbackHandle_) {\n        this.idleCallbackHandle_ = rIC(this.runTasks_);\n      }\n    }\n  }\n\n  /**\n   * Runs as many tasks in the queue as it can before reaching the\n   * deadline. If no deadline is passed, it will run all tasks.\n   * If an `IdleDeadline` object is passed (as is with `requestIdleCallback`)\n   * then the tasks are run until there's no time remaining, at which point\n   * we yield to input or other script and wait until the next idle time.\n   * @param {IdleDeadline=} deadline\n   * @private\n   */\n  runTasks_(deadline = undefined) {\n    this.cancelScheduledRun_();\n\n    if (!this.isProcessing_) {\n      this.isProcessing_ = true;\n\n      // Process tasks until there's no time left or we need to yield to input.\n      while (this.hasPendingTasks() &&\n          !shouldYield(deadline, this.taskQueue_[0].minTaskTime)) {\n        const {task, state} = this.taskQueue_.shift();\n\n        this.state_ = state;\n        task(state);\n        this.state_ = null;\n      }\n\n      this.isProcessing_ = false;\n\n      if (this.hasPendingTasks()) {\n        // Schedule the rest of the tasks for the next idle time.\n        this.scheduleTasksToRun_();\n      }\n    }\n  }\n\n  /**\n   * Cancels any scheduled idle callback and removes the handler (if set).\n   * @private\n   */\n  cancelScheduledRun_() {\n    cIC(this.idleCallbackHandle_);\n    this.idleCallbackHandle_ = null;\n  }\n\n  /**\n   * A callback for the `visibilitychange` event that runs all pending\n   * callbacks immediately if the document's visibility state is hidden.\n   * @private\n   */\n  onVisibilityChange_() {\n    if (document.visibilityState === 'hidden') {\n      this.runTasksImmediately();\n    }\n  }\n}\n\n/**\n * Returns true if the IdleDealine object exists and the remaining time is\n * less or equal to than the minTaskTime. Otherwise returns false.\n * @param {IdleDeadline|undefined} deadline\n * @param {number} minTaskTime\n * @return {boolean}\n * @private\n */\nconst shouldYield = (deadline, minTaskTime) => {\n  if (deadline && deadline.timeRemaining() <= minTaskTime) {\n    return true;\n  }\n  return false;\n};\n","/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {IdleQueue} from 'idlize/IdleQueue.mjs';\n\n\nconst instances = {};\n\n/**\n * A class that enforces a unique IdleQueue per tracking ID.\n */\nexport default class TrackerQueue extends IdleQueue {\n  /**\n   * Gets an existing instance for the passed tracking ID or creates a new\n   * instance if one doesn't exist.\n   * @param {string} trackingId An analytics.js tracking ID.\n   * @return {!TrackerQueue}\n   */\n  static getOrCreate(trackingId) {\n    // Don't create multiple instances for the same tracking ID.\n    if (!(trackingId in instances)) {\n      instances[trackingId] = {\n        references: 0,\n        value: new TrackerQueue(trackingId),\n      };\n    }\n\n    ++instances[trackingId].references;\n    return instances[trackingId].value;\n  }\n\n  /**\n   * @param {string} trackingId\n   */\n  constructor(trackingId) {\n    // If an idle callback is being run in between frame rendering, it'll\n    // have an initial `timeRemaining()` value <= 16ms. If it's run when\n    // no frames are being rendered, it'll have an initial\n    // `timeRemaining()` <= 50ms. Since all the tasks queued by autotrack\n    // are non-critial and non-UI-related, we do not want our tasks to\n    // interfere with frame rendering, and therefore by default we pick a\n    // `defaultMinTaskTime` value > 16ms, so tasks are always processed\n    // outside of frame rendering.\n    super({defaultMinTaskTime: 25, ensureTasksRun: true});\n\n    this.trackingId_ = trackingId;\n  }\n\n  /**\n   * Removes a reference from the instances map. If no more references exist\n   * for this instance, destroy it.\n   */\n  destroy() {\n    --instances[this.trackingId_].references;\n\n    if (instances[this.trackingId_].references === 0) {\n      super.destroy();\n      delete instances[this.trackingId_];\n    }\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate} from 'dom-utils';\nimport provide from '../provide';\nimport TrackerQueue from '../tracker-queue';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, getAttributeFields, now} from '../utilities';\n\n\n/**\n * Class for the `eventTracker` analytics.js plugin.\n * @implements {EventTrackerPublicInterface}\n */\nclass EventTracker {\n  /**\n   * Registers declarative event tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?EventTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.EVENT_TRACKER);\n\n    /** @type {EventTrackerOpts} */\n    const defaultOpts = {\n      events: ['click'],\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {EventTrackerOpts} */ (assign(defaultOpts, opts));\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleEvents = this.handleEvents.bind(this);\n\n    const selector = '[' + this.opts.attributePrefix + 'on]';\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(document, event, selector,\n          this.handleEvents, {composed: true, useCapture: true});\n    });\n\n    this.queue = TrackerQueue.getOrCreate(tracker.get('trackingId'));\n  }\n\n  /**\n   * Handles all events on elements with event attributes.\n   * @param {Event} event The DOM click event.\n   * @param {Element} element The delegated DOM element target.\n   */\n  handleEvents(event, element) {\n    this.queue.pushTask(({time}) => {\n      const prefix = this.opts.attributePrefix;\n      const events = element.getAttribute(prefix + 'on').split(/\\s*,\\s*/);\n\n      // Ensures the type matches one of the events specified on the element.\n      if (events.indexOf(event.type) < 0) return;\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        queueTime: now() - time,\n      };\n\n      const attributeFields = getAttributeFields(element, prefix);\n      const userFields = assign({}, this.opts.fieldsObj, attributeFields);\n      const hitType = attributeFields.hitType || 'event';\n\n      this.tracker.send(hitType, createFieldsObj(defaultFields,\n          userFields, this.tracker, this.opts.hitFilter, element, event));\n    });\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    this.queue.destroy();\n    Object.keys(this.delegates).forEach((key) => {\n      this.delegates[key].destroy();\n    });\n  }\n}\n\n\nprovide('eventTracker', EventTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport provide from '../provide';\nimport TrackerQueue from '../tracker-queue';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n    domReady, getAttributeFields, now} from '../utilities';\n\n\n/**\n * Class for the `impressionTracker` analytics.js plugin.\n * @implements {ImpressionTrackerPublicInterface}\n */\nclass ImpressionTracker {\n  /**\n   * Registers impression tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?ImpressionTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.IMPRESSION_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!(window.IntersectionObserver && window.MutationObserver)) return;\n\n    /** type {ImpressionTrackerOpts} */\n    const defaultOptions = {\n      // elements: undefined,\n      rootMargin: '0px',\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** type {ImpressionTrackerOpts} */ (\n        assign(defaultOptions, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleDomMutations = this.handleDomMutations.bind(this);\n    this.handleIntersectionChanges = this.handleIntersectionChanges.bind(this);\n    this.handleDomElementAdded = this.handleDomElementAdded.bind(this);\n    this.handleDomElementRemoved = this.handleDomElementRemoved.bind(this);\n\n    /** @type {MutationObserver} */\n    this.mutationObserver = null;\n\n    // The primary list of elements to observe. Each item contains the\n    // element ID, threshold, and whether it's currently in-view.\n    this.items = [];\n\n    // A map of element IDs in the `items` array to DOM elements in the\n    // document. The presence of a key indicates that the element ID is in the\n    // `items` array, and the presence of an element value indicates that the\n    // element is in the DOM.\n    this.elementMap = {};\n\n    // A map of threshold values. Each threshold is mapped to an\n    // IntersectionObserver instance specific to that threshold.\n    this.thresholdMap = {};\n\n    this.queue = TrackerQueue.getOrCreate(tracker.get('trackingId'));\n\n    // Once the DOM is ready, start observing for changes (if present).\n    domReady(() => {\n      if (this.opts.elements) {\n        this.observeElements(this.opts.elements);\n      }\n    });\n  }\n\n  /**\n   * Starts observing the passed elements for impressions.\n   * @param {Array<!ImpressionTrackerElementsItem|string>} elements\n   */\n  observeElements(elements) {\n    this.queue.pushTask(() => {\n      const data = this.deriveDataFromElements(elements);\n\n      // Merge the new data with the data already on the plugin instance.\n      this.items = this.items.concat(data.items);\n      this.elementMap = assign({}, data.elementMap, this.elementMap);\n      this.thresholdMap = assign({}, data.thresholdMap, this.thresholdMap);\n\n      // Observe each new item.\n      data.items.forEach((item) => {\n        const observer = this.thresholdMap[item.threshold] =\n            (this.thresholdMap[item.threshold] || new IntersectionObserver(\n                this.handleIntersectionChanges, {\n                  rootMargin: this.opts.rootMargin,\n                  threshold: [+item.threshold],\n                }));\n\n        const element = this.elementMap[item.id] ||\n            (this.elementMap[item.id] = document.getElementById(item.id));\n\n        if (element) {\n          observer.observe(element);\n        }\n      });\n\n      if (!this.mutationObserver) {\n        this.mutationObserver = new MutationObserver(this.handleDomMutations);\n        this.mutationObserver.observe(document.body, {\n          childList: true,\n          subtree: true,\n        });\n      }\n    });\n  }\n\n  /**\n   * Stops observing the passed elements for impressions.\n   * @param {Array<!ImpressionTrackerElementsItem|string>} elements\n   * @return {undefined}\n   */\n  unobserveElements(elements) {\n    // Since observing elements is queued, unobserving must be queued also or\n    // we risk this running before the observing.\n    this.queue.pushTask(() => {\n      const itemsToKeep = [];\n      const itemsToRemove = [];\n\n      this.items.forEach((item) => {\n        const itemInItems = elements.some((element) => {\n          const itemToRemove = getItemFromElement(element);\n          return itemToRemove.id === item.id &&\n              itemToRemove.threshold === item.threshold &&\n              itemToRemove.trackFirstImpressionOnly ===\n                  item.trackFirstImpressionOnly;\n        });\n        if (itemInItems) {\n          itemsToRemove.push(item);\n        } else {\n          itemsToKeep.push(item);\n        }\n      });\n\n      // If there are no items to keep, run the `unobserveAllElements` logic.\n      if (!itemsToKeep.length) {\n        this.unobserveAllElements();\n      } else {\n        const dataToKeep = this.deriveDataFromElements(itemsToKeep);\n        const dataToRemove = this.deriveDataFromElements(itemsToRemove);\n\n        this.items = dataToKeep.items;\n        this.elementMap = dataToKeep.elementMap;\n        this.thresholdMap = dataToKeep.thresholdMap;\n\n        // Unobserve removed elements.\n        itemsToRemove.forEach((item) => {\n          if (!dataToKeep.elementMap[item.id]) {\n            const observer = dataToRemove.thresholdMap[item.threshold];\n            const element = dataToRemove.elementMap[item.id];\n\n            if (element) {\n              observer.unobserve(element);\n            }\n\n            // Disconnect unneeded threshold observers.\n            if (!dataToKeep.thresholdMap[item.threshold]) {\n              dataToRemove.thresholdMap[item.threshold].disconnect();\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Stops observing all currently observed elements.\n   */\n  unobserveAllElements() {\n    // Since observing elements is queued, unobserving must be queued also or\n    // we risk this running before the observing.\n    this.queue.pushTask(() => {\n      Object.keys(this.thresholdMap).forEach((key) => {\n        this.thresholdMap[key].disconnect();\n      });\n\n      if (this.mutationObserver) {\n        this.mutationObserver.disconnect();\n        this.mutationObserver = null;\n      }\n\n      this.items = [];\n      this.elementMap = {};\n      this.thresholdMap = {};\n    });\n  }\n\n  /**\n   * Loops through each of the passed elements and creates a map of element IDs,\n   * threshold values, and a list of \"items\" (which contains each element's\n   * `threshold` and `trackFirstImpressionOnly` property).\n   * @param {Array} elements A list of elements to derive item data from.\n   * @return {Object} An object with the properties `items`, `elementMap`\n   *     and `threshold`.\n   */\n  deriveDataFromElements(elements) {\n    const items = [];\n    const thresholdMap = {};\n    const elementMap = {};\n\n    if (elements.length) {\n      elements.forEach((element) => {\n        const item = getItemFromElement(element);\n\n        items.push(item);\n        elementMap[item.id] = this.elementMap[item.id] || null;\n        thresholdMap[item.threshold] =\n            this.thresholdMap[item.threshold] || null;\n      });\n    }\n\n    return {items, elementMap, thresholdMap};\n  }\n\n  /**\n   * Handles nodes being added or removed from the DOM. This function is passed\n   * as the callback to `this.mutationObserver`.\n   * @param {Array} mutations A list of `MutationRecord` instances\n   */\n  handleDomMutations(mutations) {\n    for (let i = 0, mutation; mutation = mutations[i]; i++) {\n      // Handles removed elements.\n      for (let k = 0, removedEl; removedEl = mutation.removedNodes[k]; k++) {\n        this.walkNodeTree(removedEl, this.handleDomElementRemoved);\n      }\n      // Handles added elements.\n      for (let j = 0, addedEl; addedEl = mutation.addedNodes[j]; j++) {\n        this.walkNodeTree(addedEl, this.handleDomElementAdded);\n      }\n    }\n  }\n\n  /**\n   * Iterates through all descendents of a DOM node and invokes the passed\n   * callback if any of them match an elememt in `elementMap`.\n   * @param {Node} node The DOM node to walk.\n   * @param {Function} callback A function to be invoked if a match is found.\n   */\n  walkNodeTree(node, callback) {\n    if (node.nodeType == 1 && node.id in this.elementMap) {\n      callback(node.id);\n    }\n    for (let i = 0, child; child = node.childNodes[i]; i++) {\n      this.walkNodeTree(child, callback);\n    }\n  }\n\n  /**\n   * Handles intersection changes. This function is passed as the callback to\n   * `this.intersectionObserver`\n   * @param {Array} records A list of `IntersectionObserverEntry` records.\n   */\n  handleIntersectionChanges(records) {\n    this.queue.pushTask(({time}) => {\n      const itemsToRemove = [];\n      for (let i = 0, record; record = records[i]; i++) {\n        for (let j = 0, item; item = this.items[j]; j++) {\n          if (record.target.id !== item.id) continue;\n\n          if (isTargetVisible(item.threshold, record)) {\n            this.handleImpression({id: item.id, impressionTime: time});\n\n            if (item.trackFirstImpressionOnly) {\n              itemsToRemove.push(item);\n            }\n          }\n        }\n      }\n      if (itemsToRemove.length) {\n        this.unobserveElements(itemsToRemove);\n      }\n    });\n  }\n\n  /**\n   * Sends a hit to Google Analytics with the impression data.\n   * @param {{id: (string), impressionTime: (number)}} param1\n   */\n  handleImpression({id, impressionTime}) {\n    this.queue.pushTask(() => {\n      const element = document.getElementById(id);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: 'Viewport',\n        eventAction: 'impression',\n        eventLabel: id,\n        nonInteraction: true,\n        queueTime: now() - impressionTime,\n      };\n\n      /** @type {FieldsObj} */\n      const userFields = assign({}, this.opts.fieldsObj,\n          getAttributeFields(element, this.opts.attributePrefix));\n\n      this.tracker.send('event', createFieldsObj(defaultFields,\n          userFields, this.tracker, this.opts.hitFilter, element));\n    });\n  }\n\n  /**\n   * Handles an element in the items array being added to the DOM.\n   * @param {string} id The ID of the element that was added.\n   */\n  handleDomElementAdded(id) {\n    const element = this.elementMap[id] = document.getElementById(id);\n    this.items.forEach((item) => {\n      if (id == item.id) {\n        this.thresholdMap[item.threshold].observe(element);\n      }\n    });\n  }\n\n  /**\n   * Handles an element currently being observed for intersections being\n   * removed from the DOM.\n   * @param {string} id The ID of the element that was removed.\n   */\n  handleDomElementRemoved(id) {\n    const element = this.elementMap[id];\n    this.items.forEach((item) => {\n      if (id == item.id) {\n        this.thresholdMap[item.threshold].unobserve(element);\n      }\n    });\n\n    this.elementMap[id] = null;\n  }\n\n  /**\n   * Removes all listeners and observers.\n   * @private\n   */\n  remove() {\n    this.queue.destroy();\n    this.unobserveAllElements();\n  }\n}\n\n\nprovide('impressionTracker', ImpressionTracker);\n\n\n/**\n * Detects whether or not an intersection record represents a visible target\n * given a particular threshold.\n * @param {number} threshold The threshold the target is visible above.\n * @param {IntersectionObserverEntry} record The most recent record entry.\n * @return {boolean} True if the target is visible.\n */\nfunction isTargetVisible(threshold, record) {\n  if (threshold === 0) {\n    const i = record.intersectionRect;\n    return i.top > 0 || i.bottom > 0 || i.left > 0 || i.right > 0;\n  } else {\n    return record.intersectionRatio >= threshold;\n  }\n}\n\n\n/**\n * Creates an item by merging the passed element with the item defaults.\n * If the passed element is just a string, that string is treated as\n * the item ID.\n * @param {!ImpressionTrackerElementsItem|string} element The element to\n *     convert to an item.\n * @return {!ImpressionTrackerElementsItem} The item object.\n */\nfunction getItemFromElement(element) {\n  /** @type {ImpressionTrackerElementsItem} */\n  const defaultOpts = {\n    threshold: 0,\n    trackFirstImpressionOnly: true,\n  };\n\n  if (typeof element == 'string') {\n    element = /** @type {!ImpressionTrackerElementsItem} */ ({id: element});\n  }\n\n  return assign(defaultOpts, element);\n}\n\nexport default ImpressionTracker;\n","/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cIC, rIC} from './idle-callback-polyfills.mjs';\n\n\n/**\n * A class that wraps a value that is initialized when idle.\n */\nexport class IdleValue {\n  /**\n   * Accepts a function to initialize the value of a variable when idle.\n   * @param {!Function} init\n   */\n  constructor(init) {\n    this.init_ = init;\n    this.valueSet_ = false;\n\n    /** @type (?) */\n    this.value_;\n\n    this.idleHandle_ = rIC(() => this.setValue());\n  }\n\n  /**\n   * Returns the value if it's already been initialized. If it hasn't then the\n   * initializer function is run immediately and the pending idle callback\n   * is cancelled.\n   * @return {?}\n   */\n  getValue() {\n    if (!this.valueSet_) {\n      this.setValue();\n    }\n    return this.value_;\n  }\n\n  /**\n   * @param {?} newValue\n   */\n  setValue(newValue = this.init_()) {\n    this.cancleIdleInit_();\n    this.value_ = newValue;\n    this.valueSet_ = true;\n  }\n\n  /**\n   * Cancels any scheduled requestIdleCallback and resets the handle.\n   * @private\n   */\n  cancleIdleInit_() {\n    if (this.idleHandle_) {\n      cIC(this.idleHandle_);\n      this.idleHandle_ = null;\n    }\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * An simple reimplementation of the native Node.js EventEmitter class.\n * The goal of this implementation is to be as small as possible.\n */\nexport default class EventEmitter {\n  /**\n   * Creates the event registry.\n   */\n  constructor() {\n    this.registry_ = {};\n  }\n\n  /**\n   * Adds a handler function to the registry for the passed event.\n   * @param {string} event The event name.\n   * @param {!Function} fn The handler to be invoked when the passed\n   *     event is emitted.\n   */\n  on(event, fn) {\n    this.getRegistry_(event).push(fn);\n  }\n\n  /**\n   * Removes a handler function from the registry for the passed event.\n   * @param {string=} event The event name.\n   * @param {Function=} fn The handler to be removed.\n   */\n  off(event = undefined, fn = undefined) {\n    if (event && fn) {\n      const eventRegistry = this.getRegistry_(event);\n      const handlerIndex = eventRegistry.indexOf(fn);\n      if (handlerIndex > -1) {\n        eventRegistry.splice(handlerIndex, 1);\n      }\n    } else {\n      this.registry_ = {};\n    }\n  }\n\n  /**\n   * Runs all registered handlers for the passed event with the optional args.\n   * @param {string} event The event name.\n   * @param {...*} args The arguments to be passed to the handler.\n   */\n  emit(event, ...args) {\n    this.getRegistry_(event).forEach((fn) => fn(...args));\n  }\n\n  /**\n   * Returns an array of handlers associated with the passed event name.\n   * If no handlers have been registered, an empty array is returned.\n   * @private\n   * @param {string} event The event name.\n   * @return {!Array} An array of handler functions.\n   */\n  getRegistry_(event) {\n    return this.registry_[event] = (this.registry_[event] || []);\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {IdleValue} from 'idlize/IdleValue.mjs';\nimport EventEmitter from './event-emitter';\nimport {assign} from './utilities';\n\n\nconst AUTOTRACK_PREFIX = 'autotrack';\nconst instances = {};\nlet isListening = false;\n\n\n/** @type {boolean|undefined} */\nlet browserSupportsLocalStorage;\n\n\n/**\n * A storage object to simplify interacting with localStorage.\n */\nexport default class Store extends EventEmitter {\n  /**\n   * Gets an existing instance for the passed arguements or creates a new\n   * instance if one doesn't exist.\n   * @param {string} trackingId The tracking ID for the GA property.\n   * @param {string} namespace A namespace unique to this store.\n   * @param {StoreOpts=} opts\n   * @return {Store} The Store instance.\n   */\n  static getOrCreate(trackingId, namespace, opts = {}) {\n    const key = [AUTOTRACK_PREFIX, trackingId, namespace].join(':');\n\n    // Don't create multiple instances for the same tracking Id and namespace.\n    if (!(key in instances)) {\n      instances[key] = {\n        references: 0,\n        value: new Store(key, opts),\n      };\n    }\n\n    // Only add a single storage listener.\n    if (!isListening) {\n      initStorageListener();\n    }\n\n    ++instances[key].references;\n    return instances[key].value;\n  }\n\n  /**\n   * Returns true if the browser supports and can successfully write to\n   * localStorage. The results is cached so this method can be invoked many\n   * times with no extra performance cost.\n   * @private\n   * @return {boolean}\n   */\n  static isSupported_() {\n    if (browserSupportsLocalStorage != null) {\n      return browserSupportsLocalStorage;\n    }\n\n    try {\n      window.localStorage.setItem(AUTOTRACK_PREFIX, AUTOTRACK_PREFIX);\n      window.localStorage.removeItem(AUTOTRACK_PREFIX);\n      browserSupportsLocalStorage = true;\n    } catch (err) {\n      browserSupportsLocalStorage = false;\n    }\n    return browserSupportsLocalStorage;\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   * @return {string|null} The stored value.\n   */\n  static get_(key) {\n    return window.localStorage.getItem(key);\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   * @param {string} value The value to store.\n   */\n  static set_(key, value) {\n    window.localStorage.setItem(key, value);\n  }\n\n  /**\n   * Wraps the native localStorage method for each stubbing in tests.\n   * @private\n   * @param {string} key The store key.\n   */\n  static clear_(key) {\n    window.localStorage.removeItem(key);\n  }\n\n  /**\n   * @param {string} key A key unique to this store.\n   * @param {StoreOpts=} opts\n   */\n  constructor(key, opts = {}) {\n    super();\n    this.key_ = key;\n    this.defaults_ = opts.defaults || {};\n    this.timestampKey_ = opts.timestampKey;\n\n    this.cache_ = new IdleValue(() => this.read_());\n  }\n\n  /**\n   * Gets the data stored in localStorage for this store. If the cache is\n   * already populated, return it as is (since it's always kept up-to-date\n   * and in sync with activity in other windows via the `storage` event).\n   * TODO(philipwalton): Implement schema migrations if/when a new\n   * schema version is introduced.\n   * @return {!Object} The stored data merged with the defaults.\n   */\n  get data() {\n    return assign({}, this.defaults_, this.cache_.getValue());\n  }\n\n  /**\n   * Saves the passed data object to localStorage,\n   * merging it with the existing data.\n   * @param {!Object} newData The data to save.\n   */\n  update(newData) {\n    const timestampKey = this.timestampKey_;\n\n    // When using a timestamp key, we need to ensure that the stored data\n    // isn't newer than the data we're about to update.\n    // This can happen if plugins are using an IdleQueue and tasks in\n    // one tab get queue before but run after tasks in another tab.\n    let oldData;\n    if (timestampKey && typeof newData[timestampKey] === 'number') {\n      oldData = this.read_() || {};\n      if (typeof oldData[timestampKey] === 'number' &&\n          oldData[timestampKey] > newData[timestampKey]) {\n        return;\n      }\n    } else {\n      oldData = this.data;\n    }\n\n    const newCache = assign(oldData, newData);\n    this.cache_.setValue(newCache);\n    if (Store.isSupported_()) {\n      try {\n        Store.set_(this.key_, JSON.stringify(newCache));\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n  }\n\n  /**\n   * Clears the data in localStorage for the current store.\n   */\n  clear() {\n    this.cache_.setValue({});\n\n    if (Store.isSupported_()) {\n      try {\n        Store.clear_(this.key_);\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n  }\n\n  /**\n   * Removes the store instance for the global instances map. If this is the\n   * last store instance, the storage listener is also removed.\n   * Note: this does not erase the stored data. Use `clear()` for that.\n   */\n  destroy() {\n    --instances[this.key_].references;\n\n    if (instances[this.key_].references === 0) {\n      this.clear();\n      delete instances[this.key_];\n    }\n\n    if (Object.keys(instances).length === 0) {\n      removeStorageListener();\n    }\n  }\n\n  /**\n   * Reads the data stored in localStorage for this store. This method ignores\n   * the cache.\n   * @return {Object|undefined}\n   */\n  read_() {\n    if (Store.isSupported_()) {\n      try {\n        return parse(Store.get_(this.key_));\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n  }\n}\n\n\n/**\n * Adds a single storage event listener and flips the global `isListening`\n * flag so multiple events aren't added.\n */\nfunction initStorageListener() {\n  window.addEventListener('storage', storageListener);\n  isListening = true;\n}\n\n\n/**\n * Removes the storage event listener and flips the global `isListening`\n * flag so it can be re-added later.\n */\nfunction removeStorageListener() {\n  window.removeEventListener('storage', storageListener);\n  isListening = false;\n}\n\n\n/**\n * The global storage event listener.\n * @param {!Event} event The DOM event.\n */\nfunction storageListener(event) {\n  // Only care about storage events for keys matching stores in instances.\n  if (event.key in instances) {\n    const store = instances[event.key].value;\n    const oldData = assign({}, store.defaults_, parse(event.oldValue));\n    const newData = assign({}, store.defaults_, parse(event.newValue));\n\n    store.cache_.setValue(newData);\n    store.emit('externalSet', newData, oldData);\n  }\n}\n\n\n/**\n * Parses a source string as JSON\n * @param {string|null} source\n * @return {!Object} The JSON object.\n */\nfunction parse(source) {\n  let data = {};\n  if (source) {\n    try {\n      data = /** @type {!Object} */ (JSON.parse(source));\n    } catch (err) {\n      // Do nothing.\n    }\n  }\n  return data;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {IdleValue} from 'idlize/IdleValue.mjs';\nimport MethodChain from './method-chain';\nimport Store from './store';\nimport {now, uuid} from './utilities';\n\n\nconst SECONDS = 1000;\nconst MINUTES = 60 * SECONDS;\n\n\nconst instances = {};\n\n\n/**\n * A session management class that helps track session boundaries\n * across multiple open tabs/windows.\n */\nexport default class Session {\n  /**\n   * Gets an existing instance for the passed arguments or creates a new\n   * instance if one doesn't exist.\n   * @param {!Tracker} tracker An analytics.js tracker object.\n   * @param {number} timeout The session timeout (in minutes). This value\n   *     should match what's set in the \"Session settings\" section of the\n   *     Google Analytics admin.\n   * @param {string=} timeZone The optional IANA time zone of the view. This\n   *     value should match what's set in the \"View settings\" section of the\n   *     Google Analytics admin. (Note: this assumes all views for the property\n   *     use the same time zone. If that's not true, it's better not to use\n   *     this feature).\n   * @return {Session} The Session instance.\n   */\n  static getOrCreate(tracker, timeout, timeZone) {\n    // Don't create multiple instances for the same tracker.\n    const trackingId = tracker.get('trackingId');\n\n    if (!(trackingId in instances)) {\n      instances[trackingId] = {\n        references: 0,\n        value: new Session(tracker, timeout, timeZone),\n      };\n    }\n\n    ++instances[trackingId].references;\n    return instances[trackingId].value;\n  }\n\n  /**\n   * @param {!Tracker} tracker An analytics.js tracker object.\n   * @param {number} timeout The session timeout (in minutes). This value\n   *     should match what's set in the \"Session settings\" section of the\n   *     Google Analytics admin.\n   * @param {string=} timeZone The optional IANA time zone of the view. This\n   *     value should match what's set in the \"View settings\" section of the\n   *     Google Analytics admin. (Note: this assumes all views for the property\n   *     use the same time zone. If that's not true, it's better not to use\n   *     this feature).\n   */\n  constructor(tracker, timeout, timeZone) {\n    this.tracker = tracker;\n    this.timeout = timeout || Session.DEFAULT_TIMEOUT;\n    this.timeZone = timeZone;\n\n    // Binds methods.\n    this.sendHitTaskOverride = this.sendHitTaskOverride.bind(this);\n\n    // Initialize the store idly since it can be expensive.\n    this.idleStore_ = new IdleValue(() => {\n      /** @type {SessionStoreData} */\n      const defaultProps = {\n        hitTime: 0,\n        isExpired: false,\n      };\n      const store = Store.getOrCreate(tracker.get('trackingId'), 'session', {\n        defaults: defaultProps,\n        timestampKey: 'hitTime',\n      });\n      // Ensure the session has an ID.\n      if (!store.data.id) {\n        store.update(/** @type {SessionStoreData} */ ({id: uuid()}));\n      }\n      return store;\n    });\n\n    // Initialize the DateTimeFormat object idly since it can be expensive.\n    this.idleDateTimeFormatter_ = new IdleValue(() => {\n      if (this.timeZone) {\n        try {\n          return new Intl.DateTimeFormat('en-US', {timeZone: this.timeZone});\n        } catch (err) {\n          // Do nothing.\n        }\n      }\n      // Return null (not undefined) so the init function isn't re-run.\n      return null;\n    });\n\n    // Overrides into the trackers sendHitTask method.\n    MethodChain.add(tracker, 'sendHitTask', this.sendHitTaskOverride);\n  }\n\n  /** @return {!Store} */\n  get store_() {\n    return this.idleStore_.getValue();\n  }\n\n  /** @return {!Intl.DateTimeFormat} */\n  get dateTimeFormatter_() {\n    return this.idleDateTimeFormatter_.getValue();\n  }\n\n  /**\n   * Returns the ID of the current session.\n   * @return {string}\n   */\n  get id() {\n    return this.store_.data.id;\n  }\n\n  /**\n   * Accepts a session ID and returns true if the specified session has\n   * evidentially expired. A session can expire for two reasons:\n   *   - More than 30 minutes has elapsed since the previous hit\n   *     was sent (The 30 minutes number is the Google Analytics default, but\n   *     it can be modified in GA admin \"Session settings\").\n   *   - A new day has started since the previous hit, in the\n   *     specified time zone (should correspond to the time zone of the\n   *     property's views).\n   *\n   * Note: since real session boundaries are determined at processing time,\n   * this is just a best guess rather than a source of truth.\n   *\n   * @param {string} id The ID of a session to check for expiry.\n   * @return {boolean} True if the session has not exp\n   */\n  isExpired(id = this.id) {\n    // If a session ID is passed and it doesn't match the current ID,\n    // assume it's from an expired session. If no ID is passed, assume the ID\n    // of the current session.\n    if (id != this.id) return true;\n\n    /** @type {SessionStoreData} */\n    const sessionData = this.store_.data;\n\n    // `isExpired` will be `true` if the sessionControl field was set to\n    // 'end' on the previous hit.\n    if (sessionData.isExpired) return true;\n\n    const oldHitTime = sessionData.hitTime;\n\n    // Only consider a session expired if previous hit time data exists, and\n    // the previous hit time is greater than that session timeout period or\n    // the hits occurred on different days in the session timezone.\n    if (oldHitTime) {\n      const currentDate = new Date();\n      const oldHitDate = new Date(oldHitTime);\n      if (currentDate - oldHitDate > (this.timeout * MINUTES) ||\n          this.datesAreDifferentInTimezone(currentDate, oldHitDate)) {\n        return true;\n      }\n    }\n\n    // For all other cases return false.\n    return false;\n  }\n\n  /**\n   * Returns true if (and only if) the timezone date formatting is supported\n   * in the current browser and if the two dates are definitively not the\n   * same date in the session timezone. Anything short of this returns false.\n   * @param {!Date} d1\n   * @param {!Date} d2\n   * @return {boolean}\n   */\n  datesAreDifferentInTimezone(d1, d2) {\n    if (this.dateTimeFormatter_) {\n      return this.dateTimeFormatter_.format(d1) !=\n          this.dateTimeFormatter_.format(d2);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Keeps track of when the previous hit was sent to determine if a session\n   * has expired. Also inspects the `sessionControl` field to handles\n   * expiration accordingly.\n   * @param {function(!Model)} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(!Model)}\n   */\n  sendHitTaskOverride(originalMethod) {\n    return (model) => {\n      originalMethod(model);\n\n      const sessionControl = model.get('sessionControl');\n      const sessionWillStart = sessionControl == 'start' || this.isExpired();\n      const sessionWillEnd = sessionControl == 'end';\n\n      /** @type {SessionStoreData} */\n      const sessionData = this.store_.data;\n      sessionData.hitTime = now();\n      if (sessionWillStart) {\n        sessionData.isExpired = false;\n        sessionData.id = uuid();\n      }\n      if (sessionWillEnd) {\n        sessionData.isExpired = true;\n      }\n      this.store_.update(sessionData);\n    };\n  }\n\n  /**\n   * Restores the tracker's original `sendHitTask` to the state before\n   * session control was initialized and removes this instance from the global\n   * store.\n   */\n  destroy() {\n    const trackingId = this.tracker.get('trackingId');\n\n    --instances[trackingId].references;\n\n    if (instances[trackingId].references === 0) {\n      MethodChain.remove(this.tracker, 'sendHitTask', this.sendHitTaskOverride);\n      this.store_.destroy();\n      delete instances[trackingId];\n    }\n  }\n}\n\n\nSession.DEFAULT_TIMEOUT = 30; // minutes\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {parseUrl} from 'dom-utils';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport Session from '../session';\nimport Store from '../store';\nimport TrackerQueue from '../tracker-queue';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, debounce, isObject, now} from '../utilities';\n\n\n/**\n * Class for the `maxScrollQueryTracker` analytics.js plugin.\n * @implements {MaxScrollTrackerPublicInterface}\n */\nclass MaxScrollTracker {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.MAX_SCROLL_TRACKER);\n\n    /** @type {MaxScrollTrackerOpts} */\n    const defaultOpts = {\n      increaseThreshold: 20,\n      sessionTimeout: Session.DEFAULT_TIMEOUT,\n      // timeZone: undefined,\n      // maxScrollMetricIndex: undefined,\n      fieldsObj: {},\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {MaxScrollTrackerOpts} */ (assign(defaultOpts, opts));\n    this.tracker = tracker;\n\n    // Binds methods to `this`.\n    this.handleScroll = debounce(this.handleScroll.bind(this), 500);\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n\n    // Override the built-in tracker.set method to watch for changes.\n    MethodChain.add(tracker, 'set', this.trackerSetOverride);\n\n    this.pagePath = this.getPagePath();\n\n    const trackingId = tracker.get('trackingId');\n\n    this.store = Store.getOrCreate(\n        trackingId, 'plugins/max-scroll-tracker');\n\n    this.session = Session.getOrCreate(\n        tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Queue the rest of the initialization of the plugin idly.\n    this.queue = TrackerQueue.getOrCreate(trackingId);\n\n    this.listenForMaxScrollChanges();\n  }\n\n  /**\n   * Adds a scroll event listener if the max scroll percentage for the\n   * current page isn't already at 100%.\n   */\n  listenForMaxScrollChanges() {\n    const maxScrollPercentage = this.getMaxScrollPercentageForCurrentPage();\n    if (maxScrollPercentage < 100) {\n      addEventListener('scroll', this.handleScroll);\n    }\n  }\n\n\n  /**\n   * Removes an added scroll listener.\n   */\n  stopListeningForMaxScrollChanges() {\n    removeEventListener('scroll', this.handleScroll);\n  }\n\n\n  /**\n   * Handles the scroll event. If the current scroll percentage is greater\n   * than the stored scroll event by at least the specified increase threshold,\n   * send an event with the increase amount.\n   */\n  handleScroll() {\n    const pageHeight = getPageHeight();\n    const scrollPos = window.pageYOffset; // scrollY isn't supported in IE.\n    const windowHeight = window.innerHeight;\n\n    this.queue.pushTask(({time}) => {\n      // Ensure scrollPercentage is an integer between 0 and 100.\n      const scrollPercentage = Math.min(100, Math.max(0,\n          Math.round(100 * (scrollPos / (pageHeight - windowHeight)))));\n\n      // If the max scroll data gets out of the sync with the session data\n      // (for whatever reason), clear it.\n      const sessionId = this.session.id;\n      if (sessionId != this.store.data.sessionId) {\n        this.store.clear();\n        this.store.update({sessionId});\n      }\n\n      // If the session has expired, clear the stored data and don't send any\n      // events (since they'd start a new session). Note: this check is needed,\n      // in addition to the above check, to handle cases where the session IDs\n      // got out of sync, but the session didn't expire.\n      if (this.session.isExpired(this.store.data.sessionId)) {\n        this.store.clear();\n      } else {\n        const maxScrollPercentage = this.getMaxScrollPercentageForCurrentPage();\n\n        if (scrollPercentage > maxScrollPercentage) {\n          if (scrollPercentage == 100 || maxScrollPercentage == 100) {\n            this.stopListeningForMaxScrollChanges();\n          }\n          const increaseAmount = scrollPercentage - maxScrollPercentage;\n          if (scrollPercentage == 100 ||\n              increaseAmount >= this.opts.increaseThreshold) {\n            this.setMaxScrollPercentageForCurrentPage(scrollPercentage);\n            this.sendMaxScrollEvent(increaseAmount, scrollPercentage, time);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Detects changes to the tracker object and triggers an update if the page\n   * field has changed.\n   * @param {function((Object|string), (string|undefined))} originalMethod\n   *     A reference to the overridden method.\n   * @return {function((Object|string), (string|undefined))}\n   */\n  trackerSetOverride(originalMethod) {\n    return (field, value) => {\n      originalMethod(field, value);\n\n      /** @type {!FieldsObj} */\n      const fields = isObject(field) ? field : {[field]: value};\n      if (fields.page) {\n        const lastPagePath = this.pagePath;\n        this.pagePath = this.getPagePath();\n\n        if (this.pagePath != lastPagePath) {\n          // Since event listeners for the same function are never added twice,\n          // we don't need to worry about whether we're already listening. We\n          // can just add the event listener again.\n          this.listenForMaxScrollChanges();\n        }\n      }\n    };\n  }\n\n  /**\n   * Sends an event for the increased max scroll percentage amount.\n   * @param {number} increaseAmount\n   * @param {number} scrollPercentage\n   * @param {number} scrollTimestamp\n   */\n  sendMaxScrollEvent(increaseAmount, scrollPercentage, scrollTimestamp) {\n    this.queue.pushTask(() => {\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: 'Max Scroll',\n        eventAction: 'increase',\n        eventValue: increaseAmount,\n        eventLabel: String(scrollPercentage),\n        nonInteraction: true,\n        queueTime: now() - scrollTimestamp,\n      };\n\n      // If a custom metric was specified, set it equal to the event value.\n      if (this.opts.maxScrollMetricIndex) {\n        defaultFields['metric' + this.opts.maxScrollMetricIndex] =\n            increaseAmount;\n      }\n\n      this.tracker.send('event',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    });\n  }\n\n  /**\n   * Stores the current max scroll percentage for the current page.\n   * @param {number} maxScrollPercentage\n   */\n  setMaxScrollPercentageForCurrentPage(maxScrollPercentage) {\n    this.store.update({\n      [this.pagePath]: maxScrollPercentage,\n      sessionId: this.session.id,\n    });\n  }\n\n  /**\n   * Gets the stored max scroll percentage for the current page.\n   * @return {number}\n   */\n  getMaxScrollPercentageForCurrentPage() {\n    return this.store.data[this.pagePath] || 0;\n  }\n\n  /**\n   * Gets the page path from the tracker object.\n   * @return {string}\n   */\n  getPagePath() {\n    const url = parseUrl(\n        this.tracker.get('page') || this.tracker.get('location'));\n    return url.pathname + url.search;\n  }\n\n  /**\n   * Removes all event listeners and restores overridden methods.\n   */\n  remove() {\n    this.queue.destroy();\n    this.store.destroy();\n    this.session.destroy();\n\n    this.stopListeningForMaxScrollChanges();\n    MethodChain.remove(this.tracker, 'set', this.trackerSetOverride);\n  }\n}\n\n\nprovide('maxScrollTracker', MaxScrollTracker);\n\n\n/**\n * Gets the maximum height of the page including scrollable area.\n * @return {number}\n */\nfunction getPageHeight() {\n  const html = document.documentElement;\n  const body = document.body;\n  return Math.max(html.offsetHeight, html.scrollHeight,\n      body.offsetHeight, body.scrollHeight);\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {NULL_DIMENSION} from '../constants';\nimport provide from '../provide';\nimport TrackerQueue from '../tracker-queue';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n    debounce, isObject, now, toArray} from '../utilities';\n\n\n/**\n * Declares the MediaQueryList instance cache.\n */\nconst mediaMap = {};\n\n\n/**\n * Class for the `mediaQueryTracker` analytics.js plugin.\n * @implements {MediaQueryTrackerPublicInterface}\n */\nclass MediaQueryTracker {\n  /**\n   * Registers media query tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.MEDIA_QUERY_TRACKER);\n\n    /** @type {!MediaQueryTrackerOpts} */\n    const defaultOpts = {\n      // definitions: unefined,\n      changeTemplate: this.changeTemplate,\n      changeTimeout: 1000,\n      fieldsObj: {},\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {!MediaQueryTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    // Exits early if media query data doesn't exist.\n    if (!isObject(this.opts.definitions)) return;\n\n    this.opts.definitions = toArray(this.opts.definitions);\n    this.tracker = tracker;\n    this.changeListeners = [];\n\n    this.queue = TrackerQueue.getOrCreate(tracker.get('trackingId'));\n\n    this.processMediaQueries();\n  }\n\n  /**\n   * Loops through each media query definition, sets the custom dimenion data,\n   * and adds the change listeners.\n   */\n  processMediaQueries() {\n    this.opts.definitions.forEach((definition) => {\n      // Only processes definitions with a name and index.\n      if (definition.name && definition.dimensionIndex) {\n        const mediaName = this.getMatchName(definition);\n        this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n        this.addChangeListeners(definition);\n      }\n    });\n  }\n\n  /**\n   * Takes a definition object and return the name of the matching media item.\n   * If no match is found, the NULL_DIMENSION value is returned.\n   * @param {!Object} definition A set of named media queries associated\n   *     with a single custom dimension.\n   * @return {string} The name of the matched media or NULL_DIMENSION.\n   */\n  getMatchName(definition) {\n    let match;\n\n    definition.items.forEach((item) => {\n      if (getMediaList(item.media).matches) {\n        match = item;\n      }\n    });\n    return match ? match.name : NULL_DIMENSION;\n  }\n\n  /**\n   * Adds change listeners to each media query in the definition list.\n   * Debounces the changes to prevent unnecessary hits from being sent.\n   * @param {!Object} definition A set of named media queries associated\n   *     with a single custom dimension\n   */\n  addChangeListeners(definition) {\n    definition.items.forEach((item) => {\n      const mql = getMediaList(item.media);\n      const fn = debounce(() => {\n        this.handleChanges(definition);\n      }, this.opts.changeTimeout);\n\n      mql.addListener(fn);\n      this.changeListeners.push({mql, fn});\n    });\n  }\n\n  /**\n   * Handles changes to the matched media. When the new value differs from\n   * the old value, a change event is sent.\n   * @param {!Object} definition A set of named media queries associated\n   *     with a single custom dimension\n   */\n  handleChanges(definition) {\n    const newValue = this.getMatchName(definition);\n    const oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n    if (newValue !== oldValue) {\n      this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n      this.sendChangeEvent({definition, oldValue, newValue});\n    }\n  }\n\n  /**\n   * Sends a change event.\n   * @param {{\n   *   definition: (!Object),\n   *   oldValue: (string),\n   *   newValue: (string),\n   * }} param1\n   */\n  sendChangeEvent({definition, oldValue, newValue}) {\n    this.queue.pushTask(({time}) => {\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: definition.name,\n        eventAction: 'change',\n        eventLabel: this.opts.changeTemplate(oldValue, newValue),\n        nonInteraction: true,\n        queueTime: now() - time,\n      };\n\n      this.tracker.send('event', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    });\n  }\n\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    this.queue.destroy();\n    for (let i = 0, listener; listener = this.changeListeners[i]; i++) {\n      listener.mql.removeListener(listener.fn);\n    }\n  }\n\n  /**\n   * Sets the default formatting of the change event label.\n   * This can be overridden by setting the `changeTemplate` option.\n   * @param {string} oldValue The value of the media query prior to the change.\n   * @param {string} newValue The value of the media query after the change.\n   * @return {string} The formatted event label.\n   */\n  changeTemplate(oldValue, newValue) {\n    return oldValue + ' => ' + newValue;\n  }\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n\n\n/**\n * Accepts a media query and returns a MediaQueryList object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryList} The matched media.\n */\nfunction getMediaList(media) {\n  return mediaMap[media] || (mediaMap[media] = window.matchMedia(media));\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate, parseUrl} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        getAttributeFields, withTimeout} from '../utilities';\n\n\n/**\n * Class for the `outboundFormTracker` analytics.js plugin.\n * @implements {OutboundFormTrackerPublicInterface}\n */\nclass OutboundFormTracker {\n  /**\n   * Registers outbound form tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.OUTBOUND_FORM_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {OutboundFormTrackerOpts} */\n    const defaultOpts = {\n      formSelector: 'form',\n      shouldTrackOutboundForm: this.shouldTrackOutboundForm,\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {OutboundFormTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    this.delegate = delegate(document, 'submit', this.opts.formSelector,\n        this.handleFormSubmits.bind(this), {composed: true, useCapture: true});\n  }\n\n  /**\n   * Handles all submits on form elements. A form submit is considered outbound\n   * if its action attribute starts with http and does not contain\n   * location.hostname.\n   * When the beacon transport method is not available, the event's default\n   * action is prevented and re-emitted after the hit is sent.\n   * @param {Event} event The DOM submit event.\n   * @param {Element} form The delegated event target.\n   */\n  handleFormSubmits(event, form) {\n    const action = parseUrl(form.action).href;\n\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Outbound Form',\n      eventAction: 'submit',\n      eventLabel: action,\n    };\n\n    if (this.opts.shouldTrackOutboundForm(form, parseUrl)) {\n      if (!navigator.sendBeacon) {\n        // Stops the submit and waits until the hit is complete (with timeout)\n        // for browsers that don't support beacon.\n        event.preventDefault();\n        defaultFields.hitCallback = withTimeout(function() {\n          form.submit();\n        });\n      }\n\n      const userFields = assign({}, this.opts.fieldsObj,\n          getAttributeFields(form, this.opts.attributePrefix));\n\n      this.tracker.send('event', createFieldsObj(\n          defaultFields, userFields,\n              this.tracker, this.opts.hitFilter, form, event));\n    }\n  }\n\n  /**\n   * Determines whether or not the tracker should send a hit when a form is\n   * submitted. By default, forms with an action attribute that starts with\n   * \"http\" and doesn't contain the current hostname are tracked.\n   * @param {Element} form The form that was submitted.\n   * @param {Function} parseUrlFn A cross-browser utility method for url\n   *     parsing (note: renamed to disambiguate when compiling).\n   * @return {boolean} Whether or not the form should be tracked.\n   */\n  shouldTrackOutboundForm(form, parseUrlFn) {\n    const url = parseUrlFn(form.action);\n    return url.hostname != location.hostname &&\n        url.protocol.slice(0, 4) == 'http';\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    this.delegate.destroy();\n  }\n}\n\n\nprovide('outboundFormTracker', OutboundFormTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate, parseUrl} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        getAttributeFields, withTimeout} from '../utilities';\n\n\n/**\n * Class for the `outboundLinkTracker` analytics.js plugin.\n * @implements {OutboundLinkTrackerPublicInterface}\n */\nclass OutboundLinkTracker {\n  /**\n   * Registers outbound link tracking on a tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.OUTBOUND_LINK_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {OutboundLinkTrackerOpts} */\n    const defaultOpts = {\n      events: ['click'],\n      linkSelector: 'a, area',\n      shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {OutboundLinkTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n          this.handleLinkInteractions, {composed: true, useCapture: true});\n    });\n  }\n\n  /**\n   * Handles all interactions on link elements. A link is considered an outbound\n   * link if its hostname property does not match location.hostname. When the\n   * beacon transport method is not available, the links target is set to\n   * \"_blank\" to ensure the hit can be sent.\n   * @param {Event} event The DOM click event.\n   * @param {Element} link The delegated event target.\n   */\n  handleLinkInteractions(event, link) {\n    if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n      const href = link.getAttribute('href') || link.getAttribute('xlink:href');\n      const url = parseUrl(href);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: 'Outbound Link',\n        eventAction: event.type,\n        eventLabel: url.href,\n      };\n\n      /** @type {FieldsObj} */\n      const userFields = assign({}, this.opts.fieldsObj,\n          getAttributeFields(link, this.opts.attributePrefix));\n\n      const fieldsObj = createFieldsObj(defaultFields, userFields,\n          this.tracker, this.opts.hitFilter, link, event);\n\n      if (!navigator.sendBeacon &&\n          linkClickWillUnloadCurrentPage(event, link)) {\n        // Adds a new event handler at the last minute to minimize the chances\n        // that another event handler for this click will run after this logic.\n        const clickHandler = () => {\n          window.removeEventListener('click', clickHandler);\n\n          // Checks to make sure another event handler hasn't already prevented\n          // the default action. If it has the custom redirect isn't needed.\n          if (!event.defaultPrevented) {\n            // Stops the click and waits until the hit is complete (with\n            // timeout) for browsers that don't support beacon.\n            event.preventDefault();\n\n            const oldHitCallback = fieldsObj.hitCallback;\n            fieldsObj.hitCallback = withTimeout(function() {\n              if (typeof oldHitCallback == 'function') oldHitCallback();\n              location.href = href;\n            });\n          }\n          this.tracker.send('event', fieldsObj);\n        };\n        window.addEventListener('click', clickHandler);\n      } else {\n        this.tracker.send('event', fieldsObj);\n      }\n    }\n  }\n\n  /**\n   * Determines whether or not the tracker should send a hit when a link is\n   * clicked. By default links with a hostname property not equal to the current\n   * hostname are tracked.\n   * @param {Element} link The link that was clicked on.\n   * @param {Function} parseUrlFn A cross-browser utility method for url\n   *     parsing (note: renamed to disambiguate when compiling).\n   * @return {boolean} Whether or not the link should be tracked.\n   */\n  shouldTrackOutboundLink(link, parseUrlFn) {\n    const href = link.getAttribute('href') || link.getAttribute('xlink:href');\n    const url = parseUrlFn(href);\n    return url.hostname != location.hostname &&\n        url.protocol.slice(0, 4) == 'http';\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    Object.keys(this.delegates).forEach((key) => {\n      this.delegates[key].destroy();\n    });\n  }\n}\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n\n\n/**\n * Determines if a link click event will cause the current page to upload.\n * Note: most link clicks *will* cause the current page to unload because they\n * initiate a page navigation. The most common reason a link click won't cause\n * the page to unload is if the clicked was to open the link in a new tab.\n * @param {Event} event The DOM event.\n * @param {Element} link The link element clicked on.\n * @return {boolean} True if the current page will be unloaded.\n */\nfunction linkClickWillUnloadCurrentPage(event, link) {\n  return !(\n      // The event type can be customized; we only care about clicks here.\n      event.type != 'click' ||\n      // Links with target=\"_blank\" set will open in a new window/tab.\n      link.target == '_blank' ||\n      // On mac, command clicking will open a link in a new tab. Control\n      // clicking does this on windows.\n      event.metaKey || event.ctrlKey ||\n      // Shift clicking in Chrome/Firefox opens the link in a new window\n      // In Safari it adds the URL to a favorites list.\n      event.shiftKey ||\n      // On Mac, clicking with the option key is used to download a resouce.\n      event.altKey ||\n      // Middle mouse button clicks (which == 2) are used to open a link\n      // in a new tab, and right clicks (which == 3) on Firefox trigger\n      // a click event.\n      event.which > 1);\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {NULL_DIMENSION} from '../constants';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport Session from '../session';\nimport Store from '../store';\nimport TrackerQueue from '../tracker-queue';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, isObject, now, uuid} from '../utilities';\n\n\nconst HIDDEN = 'hidden';\nconst VISIBLE = 'visible';\nconst PAGE_ID = uuid();\nconst SECONDS = 1000;\n\n\nconst isSafari_ = !!(typeof safari === 'object' && safari.pushNotification);\n\n\n/**\n * Class for the `pageVisibilityTracker` analytics.js plugin.\n * @implements {PageVisibilityTrackerPublicInterface}\n */\nclass PageVisibilityTracker {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.PAGE_VISIBILITY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!document.visibilityState) return;\n\n    /** @type {PageVisibilityTrackerOpts} */\n    const defaultOpts = {\n      sessionTimeout: Session.DEFAULT_TIMEOUT,\n      visibleThreshold: 5 * SECONDS,\n      // timeZone: undefined,\n      sendInitialPageview: false,\n      // pageLoadsMetricIndex: undefined,\n      // visibleMetricIndex: undefined,\n      fieldsObj: {},\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {PageVisibilityTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    this.lastPageVisibilityState = document.visibilityState;\n    this.visibleThresholdTimeout_ = null;\n    this.isInitialPageviewSent_ = false;\n\n    // Binds methods to `this`.\n    this.init = this.init.bind(this);\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBeforeUnload = this.handleBeforeUnload.bind(this);\n    this.handleExternalStoreSet = this.handleExternalStoreSet.bind(this);\n\n    // Override the built-in tracker.set method to watch for changes.\n    MethodChain.add(tracker, 'set', this.trackerSetOverride);\n\n    addEventListener('visibilitychange', this.handleChange, true);\n\n    // Safari does not reliably fire the `pagehide` or `visibilitychange`\n    // events when closing a tab, so we have to use `beforeunload` with a\n    // timeout to check whether the default action was prevented.\n    // - https://bugs.webkit.org/show_bug.cgi?id=151610\n    // - https://bugs.webkit.org/show_bug.cgi?id=151234\n    // NOTE: we only add this to Safari because adding it to Firefox would\n    // prevent the page from being eligible for bfcache.\n    if (isSafari_) {\n      addEventListener('beforeunload', this.handleChange, true);\n    }\n\n    const trackingId = tracker.get('trackingId');\n\n    this.store = Store.getOrCreate(\n        trackingId, 'plugins/page-visibility-tracker', {timestampKey: 'time'});\n\n    this.store.on('externalSet', this.handleExternalStoreSet);\n\n    this.session = Session.getOrCreate(\n        tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Queue the rest of the initialization of the plugin idly.\n    this.queue = TrackerQueue.getOrCreate(trackingId);\n    this.queue.pushTask(this.init);\n  }\n\n  /**\n   * Idly initializes the rest of the plugin instance initialization logic.\n   * @param {{visibilityState: (string), time: (number)}} param1\n   */\n  init({visibilityState, time}) {\n    if (visibilityState == VISIBLE) {\n      if (this.opts.sendInitialPageview) {\n        this.sendPageview({pageviewTime: time, isPageLoad: true});\n        this.isInitialPageviewSent_ = true;\n      }\n      this.store.update(/** @type {PageVisibilityStoreData} */ ({\n        time: time,\n        state: VISIBLE,\n        pageId: PAGE_ID,\n        sessionId: this.session.id,\n      }));\n    } else {\n      if (this.opts.sendInitialPageview && this.opts.pageLoadsMetricIndex) {\n        this.sendPageLoad({pageLoadTime: time});\n      }\n    }\n  }\n\n  /**\n   * Inspects the last visibility state change data and determines if a\n   * visibility event needs to be tracked based on the current visibility\n   * state and whether or not the session has expired. If the session has\n   * expired, a change to `visible` will trigger an additional pageview.\n   * This method also sends as the event value (and optionally a custom metric)\n   * the elapsed time between this event and the previously reported change\n   * in the same session, allowing you to more accurately determine when users\n   * were actually looking at your page versus when it was in the background.\n   */\n  handleChange() {\n    if (!(document.visibilityState == VISIBLE ||\n        document.visibilityState == HIDDEN)) {\n      return;\n    }\n\n    // If the visibilityState has changed to hidden, clear any scheduled\n    // pageviews waiting for the visibleThreshold timeout.\n    if (document.visibilityState == HIDDEN) {\n      clearTimeout(this.visibleThresholdTimeout_);\n    }\n\n    // In some cases this method is invoked immediately before any\n    // `tracker.set()`` calls will change the tracker's page field, but since\n    // the Page Visibility event is idly queued we have to store the page at\n    // the time right before the change.\n    const page = this.tracker.get('page');\n\n    this.queue.pushTask(({visibilityState, time}) => {\n      const lastStoredChange = this.getAndValidateChangeData();\n\n      /** @type {PageVisibilityStoreData} */\n      const change = {\n        time: time,\n        state: visibilityState,\n        pageId: PAGE_ID,\n        sessionId: this.session.id,\n      };\n\n      if (this.session.isExpired(lastStoredChange.sessionId)) {\n        this.store.clear();\n\n        if (this.lastPageVisibilityState == HIDDEN &&\n            visibilityState == VISIBLE) {\n          // If the session has expired, changes from hidden to visible should\n          // be considered a new pageview rather than a visibility event.\n          // This behavior ensures all sessions contain a pageview so\n          // session-level page dimensions and metrics (e.g. ga:landingPagePath\n          // and ga:entrances) are correct.\n          // Also, in order to prevent false positives, we add a small timeout\n          // that is cleared if the visibilityState changes to hidden shortly\n          // after the change to visible. This can happen if a user is quickly\n          // switching through their open tabs but not actually interacting\n          // with any of them. It can also happen when a user goes to a tab\n          // just to immediately close it. Such cases should not be considered\n          // pageviews.\n          clearTimeout(this.visibleThresholdTimeout_);\n\n          this.visibleThresholdTimeout_ = setTimeout(() => {\n            this.store.update(change);\n            this.sendPageview({pageviewTime: time, sessionDidExpire: true});\n          }, this.opts.visibleThreshold);\n        }\n      } else {\n        this.store.update(change);\n\n        // If the visibilityState has changed to visible and the initial\n        // pageview has not been sent (and the `sendInitialPageview` option\n        // is `true`). Send the initial pageview now.\n        // Otherwise, track the time the page has been visible if the last\n        // recorded change was for the current page.\n        if (visibilityState == VISIBLE &&\n            this.opts.sendInitialPageview && !this.isInitialPageviewSent_) {\n          this.sendPageview({pageviewTime: time});\n          this.isInitialPageviewSent_ = true;\n        } else if (lastStoredChange.pageId == PAGE_ID &&\n            lastStoredChange.state == VISIBLE) {\n          this.sendPageVisibilityEvent({\n            startTime: lastStoredChange.time,\n            endTime: time,\n            page: page,\n          });\n        }\n      }\n\n      this.lastPageVisibilityState = visibilityState;\n    });\n  }\n\n  /**\n   * Retroactively updates the stored change data in cases where it's known to\n   * be out of sync.\n   * This plugin keeps track of each visiblity change and stores the last one\n   * in localStorage. LocalStorage is used to handle situations where the user\n   * has multiple page open at the same time and we don't want to\n   * double-report page visibility in those cases.\n   * However, a problem can occur if a user closes a page when one or more\n   * visible pages are still open. In such cases it's impossible to know\n   * which of the remaining pages the user will interact with next.\n   * To solve this problem we wait for the next change on any page and then\n   * retroactively update the stored data to reflect the current page as being\n   * the page on which the last change event occured and measure visibility\n   * from that point.\n   * @return {!PageVisibilityStoreData}\n   */\n  getAndValidateChangeData() {\n    const lastStoredChange =\n        /** @type {PageVisibilityStoreData} */ (this.store.data);\n\n    if (this.lastPageVisibilityState == VISIBLE &&\n        lastStoredChange.state == HIDDEN &&\n        lastStoredChange.pageId != PAGE_ID) {\n      lastStoredChange.state = VISIBLE;\n      lastStoredChange.pageId = PAGE_ID;\n      this.store.update(lastStoredChange);\n    }\n    return lastStoredChange;\n  }\n\n  /**\n   * Sends a Page Visibility event to track the time this page was in the\n   * visible state (assuming it was in that state long enough to meet the\n   * threshold).\n   * @param {{\n   *   startTime: (number|undefined),\n   *   endTime: (number|undefined),\n   *   page: (string|undefined),\n   * }} param1\n   */\n  sendPageVisibilityEvent({startTime, endTime, page}) {\n    const delta = endTime - startTime;\n\n    // If the detla is greater than the visibileThreshold, report it.\n    if (delta && delta >= this.opts.visibleThreshold) {\n      const deltaInSeconds = Math.round(delta / SECONDS);\n\n      this.queue.pushTask(() => {\n        /** @type {FieldsObj} */\n        const defaultFields = {\n          transport: 'beacon',\n          nonInteraction: true,\n          eventCategory: 'Page Visibility',\n          eventAction: 'track',\n          eventValue: deltaInSeconds,\n          eventLabel: NULL_DIMENSION,\n          queueTime: now() - endTime,\n        };\n\n        // `lastVisiblePage` can be an empty string.\n        if (typeof page == 'string') {\n          defaultFields.page = page;\n        }\n\n        // If a custom metric was specified, set it equal to the event value.\n        if (this.opts.visibleMetricIndex) {\n          defaultFields['metric' + this.opts.visibleMetricIndex] =\n              deltaInSeconds;\n        }\n\n        this.tracker.send('event',\n            createFieldsObj(defaultFields, this.opts.fieldsObj,\n                this.tracker, this.opts.hitFilter));\n      });\n    }\n  }\n\n  /**\n   * Sends a page load event.\n   * @param {{pageLoadTime: (number)}} param1\n   */\n  sendPageLoad({pageLoadTime}) {\n    this.queue.pushTask(() => {\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: 'Page Visibility',\n        eventAction: 'page load',\n        eventLabel: NULL_DIMENSION,\n        ['metric' + this.opts.pageLoadsMetricIndex]: 1,\n        nonInteraction: true,\n        queueTime: pageLoadTime ? now() - pageLoadTime : undefined,\n      };\n\n      this.tracker.send('event',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n    });\n  }\n\n  /**\n   * Sends a pageview, optionally calculating an offset if time is passed.\n   * @param {{\n   *   pageviewTime: (number),\n   *   isPageLoad: (boolean|undefined),\n   *   sessionDidExpire: (boolean|undefined),\n   * }} param1\n   */\n  sendPageview({pageviewTime, isPageLoad, sessionDidExpire}) {\n    this.queue.pushTask(() => {\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        queueTime: now() - pageviewTime,\n      };\n\n      if (isPageLoad && this.opts.pageLoadsMetricIndex) {\n        defaultFields['metric' + this.opts.pageLoadsMetricIndex] = 1;\n      }\n\n      this.tracker.send('pageview',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter));\n\n      // If the session expired, sending a new pageview will generate a new\n      // session ID. We need to make sure the store has that updated ID.\n      if (sessionDidExpire) {\n        this.store.update({sessionId: this.session.id});\n      }\n    });\n  }\n\n  /**\n   * Detects changes to the tracker object and triggers an update if the page\n   * field has changed.\n   * @param {function((Object|string), (string|undefined))} originalMethod\n   *     A reference to the overridden method.\n   * @return {function((Object|string), (string|undefined))}\n   */\n  trackerSetOverride(originalMethod) {\n    return (field, value) => {\n      /** @type {!FieldsObj} */\n      const fields = isObject(field) ? field : {[field]: value};\n      if (fields.page && fields.page !== this.tracker.get('page')) {\n        if (this.lastPageVisibilityState == VISIBLE) {\n          this.handleChange();\n        }\n      }\n      originalMethod(field, value);\n    };\n  }\n\n  /**\n   * Handles responding to the `storage` event.\n   * The code on this page needs to be informed when other tabs or windows are\n   * updating the stored page visibility state data. This method checks to see\n   * if a hidden state is stored when there are still visible tabs open, which\n   * can happen if multiple windows are open at the same time.\n   * @param {!PageVisibilityStoreData} newData\n   * @param {!PageVisibilityStoreData} oldData\n   */\n  handleExternalStoreSet(newData, oldData) {\n    // If the change times are the same, then the previous write only\n    // updated the active page ID. It didn't enter a new state and thus no\n    // hits should be sent.\n    if (newData.time == oldData.time) return;\n\n    // Page Visibility events must be sent by the tracker on the page\n    // where the original event occurred. So if a change happens on another\n    // page, but this page is where the previous change event occurred, then\n    // this page is the one that needs to send the event (so all dimension\n    // data is correct).\n    if (oldData.pageId == PAGE_ID &&\n        oldData.state == VISIBLE &&\n        !this.session.isExpired(oldData.sessionId)) {\n      this.sendPageVisibilityEvent({\n        startTime: oldData.time,\n        endTime: newData.time,\n      });\n    }\n  }\n\n  /**\n   * Handles responding to the `beforeunload` event.\n   * Since some browsers don't emit a `visibilitychange` event in all cases\n   * where a page might be unloaded, it's necessary to hook into the\n   * `beforeunload` event to ensure the correct state is always stored.\n   */\n  handleBeforeUnload() {\n    // If the stored visibility state isn't hidden when the beforeunload event\n    // fires, it means the visibilitychange event didn't fire as the document\n    // was being unloaded, so we invoke it manually.\n    if (this.lastPageVisibilityState != HIDDEN) {\n      this.handleChange();\n    }\n  }\n\n  /**\n   * Removes all event listeners and restores overridden methods.\n   */\n  remove() {\n    this.queue.destroy();\n    this.store.destroy();\n    this.session.destroy();\n\n    MethodChain.remove(this.tracker, 'set', this.trackerSetOverride);\n    removeEventListener('beforeunload', this.handleBeforeUnload, true);\n    removeEventListener('visibilitychange', this.handleChange, true);\n  }\n}\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport provide from '../provide';\nimport TrackerQueue from '../tracker-queue';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, now} from '../utilities';\n\n\n/**\n * Class for the `socialWidgetTracker` analytics.js plugin.\n * @implements {SocialWidgetTrackerPublicInterface}\n */\nclass SocialWidgetTracker {\n  /**\n   * Registers social tracking on tracker object.\n   * Supports both declarative social tracking via HTML attributes as well as\n   * tracking for social events when using official Twitter or Facebook widgets.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.SOCIAL_WIDGET_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {SocialWidgetTrackerOpts} */\n    const defaultOpts = {\n      fieldsObj: {},\n      hitFilter: null,\n    };\n\n    this.opts = /** @type {SocialWidgetTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods to `this`.\n    this.addWidgetListeners = this.addWidgetListeners.bind(this);\n    this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n    this.handleTweetEvents = this.handleTweetEvents.bind(this);\n    this.handleFollowEvents = this.handleFollowEvents.bind(this);\n    this.handleLikeEvents = this.handleLikeEvents.bind(this);\n    this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n    this.queue = TrackerQueue.getOrCreate(tracker.get('trackingId'));\n\n    if (document.readyState != 'complete') {\n      // Adds the widget listeners after the window's `load` event fires.\n      // If loading widgets using the officially recommended snippets, they\n      // will be available at `window.load`. If not users can call the\n      // `addWidgetListeners` method manually.\n      window.addEventListener('load', this.addWidgetListeners);\n    } else {\n      this.addWidgetListeners();\n    }\n  }\n\n\n  /**\n   * Invokes the methods to add Facebook and Twitter widget event listeners.\n   * Ensures the respective global namespaces are present before adding.\n   */\n  addWidgetListeners() {\n    this.queue.pushTask(() => {\n      if (window.FB) this.addFacebookEventHandlers();\n      if (window.twttr) this.addTwitterEventHandlers();\n    });\n  }\n\n  /**\n   * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n   * official tweet and follow buttons. Note: this does not capture tweet or\n   * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n   */\n  addTwitterEventHandlers() {\n    try {\n      window.twttr.ready(() => {\n        window.twttr.events.bind('tweet', this.handleTweetEvents);\n        window.twttr.events.bind('follow', this.handleFollowEvents);\n      });\n    } catch (err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n   * official tweet and follow buttons.\n   */\n  removeTwitterEventHandlers() {\n    try {\n      window.twttr.ready(() => {\n        window.twttr.events.unbind('tweet', this.handleTweetEvents);\n        window.twttr.events.unbind('follow', this.handleFollowEvents);\n      });\n    } catch (err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n   * official Facebook like button.\n   */\n  addFacebookEventHandlers() {\n    try {\n      window.FB.Event.subscribe('edge.create', this.handleLikeEvents);\n      window.FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n    } catch (err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n   * official Facebook like button.\n   */\n  removeFacebookEventHandlers() {\n    try {\n      window.FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n      window.FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n    } catch (err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Handles `tweet` events emitted by the Twitter JS SDK.\n   * @param {TwttrEvent} event The Twitter event object passed to the handler.\n   */\n  handleTweetEvents(event) {\n    this.queue.pushTask(({time}) => {\n      // Ignores tweets from widgets that aren't the tweet button.\n      if (event.region != 'tweet') return;\n\n      const url = event.data.url || event.target.getAttribute('data-url') ||\n          location.href;\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Twitter',\n        socialAction: 'tweet',\n        socialTarget: url,\n        queueTime: now() - time,\n      };\n      this.tracker.send('social',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter, event.target, event));\n    });\n  }\n\n  /**\n   * Handles `follow` events emitted by the Twitter JS SDK.\n   * @param {TwttrEvent} event The Twitter event object passed to the handler.\n   */\n  handleFollowEvents(event) {\n    this.queue.pushTask(({time}) => {\n      // Ignore follows from widgets that aren't the follow button.\n      if (event.region != 'follow') return;\n\n      const screenName = event.data.screen_name ||\n          event.target.getAttribute('data-screen-name');\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Twitter',\n        socialAction: 'follow',\n        socialTarget: screenName,\n        queueTime: now() - time,\n      };\n      this.tracker.send('social',\n          createFieldsObj(defaultFields, this.opts.fieldsObj,\n              this.tracker, this.opts.hitFilter, event.target, event));\n    });\n  }\n\n  /**\n   * Handles `like` events emitted by the Facebook JS SDK.\n   * @param {string} url The URL corresponding to the like event.\n   */\n  handleLikeEvents(url) {\n    this.queue.pushTask(({time}) => {\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Facebook',\n        socialAction: 'like',\n        socialTarget: url,\n        queueTime: now() - time,\n      };\n      this.tracker.send('social', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    });\n  }\n\n  /**\n   * Handles `unlike` events emitted by the Facebook JS SDK.\n   * @param {string} url The URL corresponding to the unlike event.\n   */\n  handleUnlikeEvents(url) {\n    this.queue.pushTask(({time}) => {\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Facebook',\n        socialAction: 'unlike',\n        socialTarget: url,\n        queueTime: now() - time,\n      };\n      this.tracker.send('social', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    });\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    this.queue.destroy();\n    this.removeFacebookEventHandlers();\n    this.removeTwitterEventHandlers();\n    window.removeEventListener('load', this.addWidgetListeners);\n  }\n}\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport TrackerQueue from '../tracker-queue';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, now} from '../utilities';\n\n\n/**\n * Class for the `urlChangeTracker` analytics.js plugin.\n * @implements {UrlChangeTrackerPublicInterface}\n */\nclass UrlChangeTracker {\n  /**\n   * Adds handler for the history API methods\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.URL_CHANGE_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!history.pushState || !window.addEventListener) return;\n\n    /** @type {UrlChangeTrackerOpts} */\n    const defaultOpts = {\n      shouldTrackUrlChange: this.shouldTrackUrlChange,\n      trackReplaceState: false,\n      fieldsObj: {},\n      hitFilter: null,\n    };\n\n    this.opts = /** @type {UrlChangeTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Sets the initial page field.\n    // Don't set this on the tracker yet so campaign data can be retreived\n    // from the location field.\n    this.path = getPath();\n\n    this.queue = TrackerQueue.getOrCreate(tracker.get('trackingId'));\n\n    // Binds methods.\n    this.pushStateOverride = this.pushStateOverride.bind(this);\n    this.replaceStateOverride = this.replaceStateOverride.bind(this);\n    this.handlePopState = this.handlePopState.bind(this);\n\n    // Watches for history changes.\n    MethodChain.add(history, 'pushState', this.pushStateOverride);\n    MethodChain.add(history, 'replaceState', this.replaceStateOverride);\n    window.addEventListener('popstate', this.handlePopState);\n  }\n\n  /**\n   * Handles invocations of the native `history.pushState` and calls\n   * `handleUrlChange()` indicating that the history updated.\n   * @param {!Function} originalMethod A reference to the overridden method.\n   * @return {!Function}\n   */\n  pushStateOverride(originalMethod) {\n    return (...args) => {\n      originalMethod(...args);\n      this.handleUrlChange(true);\n    };\n  }\n\n  /**\n   * Handles invocations of the native `history.replaceState` and calls\n   * `handleUrlChange()` indicating that history was replaced.\n   * @param {!Function} originalMethod A reference to the overridden method.\n   * @return {!Function}\n   */\n  replaceStateOverride(originalMethod) {\n    return (...args) => {\n      originalMethod(...args);\n      this.handleUrlChange(false);\n    };\n  }\n\n  /**\n   * Handles responding to the popstate event and calls\n   * `handleUrlChange()` indicating that history was updated.\n   */\n  handlePopState() {\n    this.handleUrlChange(true);\n  }\n\n  /**\n   * Updates the page and title fields on the tracker and sends a pageview\n   * if a new history entry was created.\n   * @param {boolean} historyDidUpdate True if the history was changed via\n   *     `pushState()` or the `popstate` event. False if the history was just\n   *     modified via `replaceState()`.\n   */\n  handleUrlChange(historyDidUpdate) {\n    // Call the update logic asychronously to help ensure that app logic\n    // responding to the URL change happens prior to this.\n    setTimeout(() => {\n      const oldPath = this.path;\n      const newPath = getPath();\n\n      if (oldPath != newPath &&\n          this.opts.shouldTrackUrlChange.call(this, newPath, oldPath)) {\n        this.path = newPath;\n\n      /** @type {FieldsObj} */\n        const newFields = {\n          page: newPath,\n          title: document.title,\n        };\n\n        this.tracker.set(newFields);\n\n        if (historyDidUpdate || this.opts.trackReplaceState) {\n          // Pass the new fields here in addition to setting them above\n          // on the off-chance that another URL change happens before this\n          // one gets sent.\n          this.sendPageview(newFields);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Sends a pageview hit when idle.\n   * @param {!FieldsObj} fieldsObj\n   */\n  sendPageview(fieldsObj) {\n    this.queue.pushTask(({time}) => {\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        page: fieldsObj.page,\n        title: fieldsObj.title,\n        queueTime: now() - time,\n      };\n\n      this.tracker.send('pageview', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    });\n  }\n\n  /**\n   * Determines whether or not the tracker should send a hit with the new page\n   * data. This default implementation can be overrided in the config options.\n   * @param {string} newPath The path after the URL change.\n   * @param {string} oldPath The path prior to the URL change.\n   * @return {boolean} Whether or not the URL change should be tracked.\n   */\n  shouldTrackUrlChange(newPath, oldPath) {\n    return !!(newPath && oldPath);\n  }\n\n  /**\n   * Removes all event listeners and restores overridden methods.\n   */\n  remove() {\n    this.queue.destroy();\n    MethodChain.remove(history, 'pushState', this.pushStateOverride);\n    MethodChain.remove(history, 'replaceState', this.replaceStateOverride);\n    window.removeEventListener('popstate', this.handlePopState);\n  }\n}\n\n\nprovide('urlChangeTracker', UrlChangeTracker);\n\n\n/**\n * @return {string} The path value of the current URL.\n */\nfunction getPath() {\n  return location.pathname + location.search;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// Imports all sub-plugins.\nimport './plugins/clean-url-tracker';\nimport './plugins/event-tracker';\nimport './plugins/impression-tracker';\nimport './plugins/max-scroll-tracker';\nimport './plugins/media-query-tracker';\nimport './plugins/outbound-form-tracker';\nimport './plugins/outbound-link-tracker';\nimport './plugins/page-visibility-tracker';\nimport './plugins/social-widget-tracker';\nimport './plugins/url-change-tracker';\n"],"names":["proto","window","Element","prototype","nativeMatches","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","element","test","nodeType","i","item","selector","call","nodes","parentNode","querySelectorAll","node","parents","list","push","closest","shouldCheckSelf","parentElements","concat","parent","delegate","ancestor","eventType","callback","opts","listener","event","delegateTarget","composed","composedPath","target","addEventListener","useCapture","removeEventListener","getAttributes","attrs","map","attributes","length","attr","name","value","HTTP_PORT","HTTPS_PORT","DEFAULT_PORT","RegExp","a","document","createElement","cache","parseUrl","url","location","href","charAt","port","host","replace","origin","protocol","pathname","hash","hostname","search","VERSION","DEV_ID","VERSION_PARAM","USAGE_PARAM","NULL_DIMENSION","instances","MethodChain","context","methodName","methodOverride","add","methodChain","getMethodChain","remove","isTask","originalMethodReference","get","boundMethodChain","wrappedMethod","lastBoundMethod","set","overrideMethod","rebindMethodChain","index","indexOf","splice","destroy","method","previousMethod","bind","filter","h","getOrCreateMethodChain","createFieldsObj","defaultFields","userFields","tracker","undefined","hitFilter","originalBuildHitTask","model","assign","getAttributeFields","prefix","attributeFields","keys","forEach","attribute","field","camelCase","slice","domReady","readyState","fn","debounce","wait","timeout","args","setTimeout","withTimeout","called","Object","sources","len","source","key","hasOwnProperty","str","match","p1","toUpperCase","capitalize","isObject","toArray","Array","isArray","now","Date","uuid","b","Math","random","toString","provide","pluginName","pluginConstructor","gaAlias","GoogleAnalyticsObject","q","gaDevIds","gaplugins","plugins","PLUGIN_COUNT","trackUsage","plugin","convertHexToBin","hex","parseInt","convertBinToHex","bin","padZeros","toAdd","flipBitOn","substr","trackPlugin","pluginIndex","usageHex","usageBin","trackVersion","CleanUrlTracker","CLEAN_URL_TRACKER","defaultOpts","queryDimension","stripQuery","queryDimensionIndex","trackerGetOverride","buildHitTaskOverride","originalMethod","fieldsObj","cleanedFieldsObj","cleanUrlFields","page","indexFilename","parts","split","join","trailingSlash","isFilename","stripNonWhitelistedQueryParams","urlFieldsFilter","userCleanedFieldsObj","returnValue","searchString","queryParamsWhitelist","foundParams","kv","supportsRequestIdleCallback_","requestIdleCallback","IdleDeadline","initTime","initTime_","max","requestIdleCallbackShim","deadline","cancelIdleCallbackShim","handle","rIC","cIC","cancelIdleCallback","createQueueMicrotaskViaPromises","microtask","resolve","then","createQueueMicrotaskViaMutationObserver","microtaskQueue","observer","MutationObserver","createTextNode","observe","characterData","data","String","queueMicrotask","Promise","DEFAULT_MIN_TASK_TIME","isSafari_","safari","pushNotification","IdleQueue","ensureTasksRun","defaultMinTaskTime","idleCallbackHandle_","taskQueue_","isProcessing_","state_","defaultMinTaskTime_","ensureTasksRun_","runTasksImmediately","runTasks_","onVisibilityChange_","addTask_","unshift","cancelScheduledRun_","arrayMethod","task","minTaskTime","state","visibilityState","scheduleTasksToRun_","hasPendingTasks","shouldYield","shift","timeRemaining","TrackerQueue","trackingId","references","trackingId_","EventTracker","EVENT_TRACKER","handleEvents","attributePrefix","delegates","events","queue","getOrCreate","pushTask","time","getAttribute","type","hitType","send","ImpressionTracker","IMPRESSION_TRACKER","IntersectionObserver","defaultOptions","handleDomMutations","handleIntersectionChanges","handleDomElementAdded","handleDomElementRemoved","mutationObserver","items","elementMap","thresholdMap","elements","observeElements","deriveDataFromElements","threshold","rootMargin","id","getElementById","body","itemsToKeep","itemsToRemove","itemInItems","some","itemToRemove","getItemFromElement","trackFirstImpressionOnly","unobserveAllElements","dataToKeep","dataToRemove","unobserve","disconnect","mutations","mutation","k","removedEl","removedNodes","walkNodeTree","j","addedEl","addedNodes","child","childNodes","records","record","isTargetVisible","handleImpression","impressionTime","unobserveElements","intersectionRect","top","bottom","left","right","intersectionRatio","IdleValue","init","init_","valueSet_","value_","idleHandle_","setValue","newValue","cancleIdleInit_","EventEmitter","registry_","getRegistry_","eventRegistry","handlerIndex","AUTOTRACK_PREFIX","isListening","browserSupportsLocalStorage","Store","namespace","localStorage","setItem","removeItem","err","getItem","key_","defaults_","defaults","timestampKey_","timestampKey","cache_","read_","newData","oldData","newCache","isSupported_","set_","JSON","stringify","clear_","clear","parse","get_","getValue","initStorageListener","storageListener","removeStorageListener","store","oldValue","emit","SECONDS","MINUTES","Session","timeZone","DEFAULT_TIMEOUT","sendHitTaskOverride","idleStore_","defaultProps","update","idleDateTimeFormatter_","Intl","DateTimeFormat","sessionData","store_","isExpired","oldHitTime","hitTime","currentDate","oldHitDate","datesAreDifferentInTimezone","d1","d2","dateTimeFormatter_","format","sessionControl","sessionWillStart","sessionWillEnd","MaxScrollTracker","MAX_SCROLL_TRACKER","handleScroll","trackerSetOverride","pagePath","getPagePath","session","sessionTimeout","listenForMaxScrollChanges","maxScrollPercentage","getMaxScrollPercentageForCurrentPage","pageHeight","getPageHeight","scrollPos","pageYOffset","windowHeight","innerHeight","scrollPercentage","min","round","sessionId","stopListeningForMaxScrollChanges","increaseAmount","increaseThreshold","setMaxScrollPercentageForCurrentPage","sendMaxScrollEvent","fields","lastPagePath","scrollTimestamp","maxScrollMetricIndex","html","documentElement","offsetHeight","scrollHeight","mediaMap","MediaQueryTracker","MEDIA_QUERY_TRACKER","changeTemplate","definitions","changeListeners","processMediaQueries","definition","dimensionIndex","mediaName","getMatchName","addChangeListeners","getMediaList","media","mql","handleChanges","changeTimeout","addListener","sendChangeEvent","removeListener","matchMedia","OutboundFormTracker","OUTBOUND_FORM_TRACKER","shouldTrackOutboundForm","formSelector","handleFormSubmits","form","action","navigator","sendBeacon","preventDefault","hitCallback","submit","parseUrlFn","OutboundLinkTracker","OUTBOUND_LINK_TRACKER","shouldTrackOutboundLink","handleLinkInteractions","linkSelector","link","linkClickWillUnloadCurrentPage","clickHandler","defaultPrevented","oldHitCallback","metaKey","ctrlKey","shiftKey","altKey","which","HIDDEN","VISIBLE","PAGE_ID","PageVisibilityTracker","PAGE_VISIBILITY_TRACKER","lastPageVisibilityState","visibleThresholdTimeout_","isInitialPageviewSent_","handleChange","handleBeforeUnload","handleExternalStoreSet","on","sendInitialPageview","sendPageview","pageviewTime","isPageLoad","pageLoadsMetricIndex","sendPageLoad","pageLoadTime","lastStoredChange","getAndValidateChangeData","change","sessionDidExpire","visibleThreshold","pageId","sendPageVisibilityEvent","startTime","endTime","delta","deltaInSeconds","visibleMetricIndex","SocialWidgetTracker","SOCIAL_WIDGET_TRACKER","addWidgetListeners","addTwitterEventHandlers","handleTweetEvents","handleFollowEvents","handleLikeEvents","handleUnlikeEvents","FB","addFacebookEventHandlers","twttr","ready","unbind","Event","subscribe","unsubscribe","region","screenName","screen_name","removeFacebookEventHandlers","removeTwitterEventHandlers","UrlChangeTracker","URL_CHANGE_TRACKER","history","pushState","shouldTrackUrlChange","path","getPath","pushStateOverride","replaceStateOverride","handlePopState","handleUrlChange","historyDidUpdate","oldPath","newPath","newFields","title","trackReplaceState"],"mappings":"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"}